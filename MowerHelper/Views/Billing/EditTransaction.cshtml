@model MowerHelper.Models.BLL.Billing.RPBilling
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
 @*   <meta name="viewport" content="width=device-width" />*@
    <title>Mower Helper-Find an Mower Helper</title> 
    <script src="~/Scripts/Expire.js" type="text/javascript"></script>
    <script src="~/Scripts/DatepickerNew.js" type="text/javascript"></script>
</head>
<body>
    @using (Ajax.BeginForm("EditTransaction", "Billing", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "editTSuccess",
        OnComplete = "SessionExpireFail"

    }, new { @id = "newPmtform" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("patid")
        @Html.Hidden("Transaction_ID")
        @Html.Hidden("ToReference_ID")
        @Html.Hidden("fromReferenceId")
        @Html.Hidden("FromReferenceType_ID")
        @Html.Hidden("ToReferenceType_ID")
        @Html.Hidden("Date_range")
        @Html.Hidden("PageNo")
        @Html.Hidden("NoOfRecords")
        @Html.Hidden("PatientID")
        @Html.Hidden("PatientLogin_ID")
        @Html.Hidden("FromDate")
        @Html.Hidden("ToDate")
        @Html.Hidden("type_id")
        <table border="0" cellpadding="6" cellspacing="1" class="border_style" width="100%">
            <tr class="white_color">
                <td width="20%" align="right"><strong>Client name :&nbsp;</strong> </td>
                <td>
                    <span id="lbl_PayPatientName"></span>
                </td>
            </tr>
             @*<tr class="white_color" id="trEPayFrom" style="display: none">
                <td width="20%" align="right">
                   <strong>Payment From :&nbsp;</strong>
                </td>
                <td align="left">
                <span id="lblEPayfrom"></span>
                </td>
            </tr>*@
                                    <tr class="white_color">
                    <td width="20%" align="right">
                    <strong>Email :&nbsp;</strong>
                    </td>
                    <td align="left" id="td_Email">
                    @Html.TextBox("Customer_Email", Model.Customer_Email, new { @class = "textfield ETransEmail", @maxLength = 50, @style = "width:240px" }) &nbsp;&nbsp;<span id="lbl_ErrEmail" style="color: Black; font-weight: bold;"></span>
                    </td>
                </tr>
             <tr class="white_color">
                <td width="20%" align="right"><strong>Transaction mode :&nbsp;</strong></td>
                <td>
                    <label id="txt_EditTransaction"></label>
@*                     @Html.TextBox("txt_EditTransaction", null, new { @class = "textfield", @style = "width:240px" })&nbsp;&nbsp;<span id="lbl_EditTransaction" style="color:Black;font-weight:bold;"></span>*@
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right"><strong>Mode of payment :&nbsp;</strong></td>
                <td>
                    <span id="lbl_Paymentmode"></span>
                </td>
            </tr>
             <tr class="white_color" id="tdAuthETrans"  style="display:none">
                    <td width="20%" align="right">
                    <strong>Last 4 digits of credit card :&nbsp;</strong>
                    </td>
                    <td align="left">
                     @Html.TextBox("Authorizednumber", Model.Authorizednumber, new { @class = "textfield", @maxLength = 4, @style = "width:90px;", onkeypress = "return AlphaNumbers(event);" })@*&nbsp;&nbsp;(Please do not enter Credit card number)*@
                    </td>
                </tr>
                @if (Model.paytype == "Check")
                {
                    //if (Model.ChecksNo != null & Model.ChecksNo != "")
                    //{
                  <tr class="white_color" id="trchechno" >
                    <td width="20%" align="right">
                    <strong>Check number :&nbsp;</strong>
                    </td>
                    <td align="left">
                    @*<span id="lblchecknum" style="font-weight:bold">@Model.ChecksNo</span>*@
                        @Html.TextBox("ChecksNo", Model.ChecksNo, new { @class = "textfield", @maxLength = 50, @style = "width:150px;" })
                    </td>
                </tr>
                    //}
                }
            <tr class="white_color">
                <td width="20%" align="right"><font color="red">*</font><strong>Transaction date :&nbsp;</strong> </td>
                <td id="td_EPdate1">
                    @Html.TextBox("TransactionEDate", DateTime.Now.ToString("MM/dd/yyyy"), new { @class = "textfield ETransDate Datefield", @style = "width:100px" })&nbsp;&nbsp;<span id="lbl_ErrPdate1" style="color:Black;font-weight:bold;"></span>
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right"><font color="red">*</font><strong>Amount :&nbsp;</strong></td>
                <td id="td_EPamount1">
                    @Html.TextBox("Transaction_Amount", null, new { @class = "textfield ETransAmt", @style = "width:100px", @onkeypress = "return checkValidNumeric(Transaction_Amount,8,2,event)" })&nbsp;&nbsp;<span id="lbl_ErrPamount1" style="color:Black;font-weight:bold;"></span>
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right"> <strong>Notes :&nbsp;</strong> </td>
                <td align="left" id="td_Epnotes1">
                        <table>
                            <tr>
<td>
    <table style="width:100%;">
        <tr style="width:100%;">
            <td style="width:30%;"> 
                <table>
                    <tr>
                       @* (string)ViewBag.paymentnotes*@
                   
                        <td>@Html.TextArea("Notes", Model.Notes, 3, 3, new { @class = "textfield ETNotes", @style = "width:340px;height:78px;" })&nbsp;&nbsp;</td>
                        <td><img src="~/Images/help2.png" id="Img3" onmouseover="ddrivetip('@ViewBag.pmtENote',300)" onmouseout="hideddrivetip()" style="vertical-align:middle" /></td>
                    </tr>
                </table>
                 </td>
            <td style="width:70%;">
                <table>
                    <tr>
                        <td><span>(These notes won't be sent to client. They  are for your usage.)</span>
                            <br />
                            </td>
                    </tr>
                    <tr>
                        <td>
                            (Maximum length 1000 characters)
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
                            </tr>
                            <tr>
                                <td>
<span id="lbl_ErrNotes1" style="color: Black; font-weight: bold;"></span>
                                    </td>
                            </tr>
                        </table>
                    </td>
            
            </tr>
            <tr class="white_color">
                    <td align="center" colspan="2">
              <span style="font-weight: bold;">   @Html.CheckBox("Echkemail", true, new { onkeypress = "return fnsetfocus(event,'btnSave')", autocomplete = "off" })
                  <label id="ETchkAgree" for="ETchkAgree">Email receipt to client</label>
              </span>
                    </td>
                </tr>
        </table>@*
        @Html.Raw(ViewBag.editPaydist)
        *@<table id="tbl_submit" border="0" cellpadding="0" cellspacing="0" width="98%">
            <tr style="height: 50px">
                <td align="right">
                    <input type="submit" value="save" class="button" name="btnsave" onclick="return Validate_PaymentInfo();" />
                    <input type="button" name="btnCancel" class="Epmtclose button" value="Cancel" />
                </td>
            </tr>
        </table>
    }
    <script type="text/javascript">
        function isValidDate(strDate) {
            var dateStr = strDate; var datePat = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{4})$/; var month, day, year; var monthArray = new Array(); var matchArray = dateStr.match(datePat); var intShowI; var args; var strError = ""; monthArray[0] = "January"; monthArray[1] = "February"; monthArray[2] = "March"; monthArray[3] = "April"; monthArray[4] = "May"; monthArray[5] = "June"; monthArray[6] = "July"; monthArray[7] = "August"; monthArray[8] = "September"; monthArray[9] = "October"; monthArray[10] = "November"; monthArray[11] = "December"; args = IsValidDate.arguments
            if (dateStr != "") {
                if (matchArray == null)
                { strError = "Please enter date in mm/dd/yyyy format."; return strError; }
                month = matchArray[1]; day = matchArray[3]; year = matchArray[4]; if (year <= 1753)
                { strError = "Please enter a year greater than 1753."; return strError; }
                if (month < 1 || month > 12)
                { strError = "Month must be between 1 and 12."; return strError; }
                if (day < 1 || day > 31)
                { strError = "Day must be between 1 and 31."; return strError; }
                if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) {
                    strError = monthArray[month - 1] + " doesn't have 31 days!"
                    return strError;
                }
                if (month == 2) {
                    var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)); if (day > 29 || (day == 29 && !isleap))
                    { strError = "February " + year + " doesn't have " + day + " days!"; return strError; }
                }
            }
            return strError;
        }
        function Validate_PaymentInfo() {
            var stremail = trim($('.ETransEmail').val());
            $('.ETransEmail').val(stremail);// = stremail;

            ClearInlineAlert('lbl_ErrEmail', 'td_Email', '#FFFFFF');
            ClearInlineAlert('lbl_ErrPdate1', 'td_EPdate1', '#FFFFFF');
            ClearInlineAlert('lbl_ErrPamount1', 'td_EPamount1', '#FFFFFF')
            ClearInlineAlert('lbl_ErrNotes1', 'td_Epnotes1', '#FFFFFF')
            if ($('.ETransEmail').val() != '') {
                
                if (ValidateEmail($('.ETransEmail').val()) == 0) {
                    InlineAlert('lbl_ErrEmail', 'td_Email', 'Please enter valid email.')
                    $('.ETransEmail').focus();
                    return false;
                }
               
            }
            if ($('.ETransDate').val() == "" || $('.ETransDate').val() == "mm/dd/yyyy") {
                //                Glb_ShowAlert("Invalid payment info!!! payment date can not be empty.");
                InlineAlert('lbl_ErrPdate1', 'td_EPdate1', 'Invalid transaction info!!! transaction date can not be empty.')
                $('.ETransDate').focus();
                return false;
            }
            else {
              
                var strRetAlert = isValidDate($('.ETransDate').val())
                if (strRetAlert != "") {
                    //                    Glb_ShowAlert(strRetAlert);
                    InlineAlert('lbl_ErrPdate1', 'td_EPdate1', strRetAlert)
                    $('.ETransDate').focus();
                    return false;
                }
                
                var dtCur = new Date();
                var dtGiven = new Date($('.ETransDate').val());
                if (dtCur < dtGiven) {
                    //                Glb_ShowAlert("Invalid charge info!!! charge date exceeding the current  date.");
                    InlineAlert('lbl_ErrPdate1', 'td_EPdate1', 'Invalid transaction info!!! transaction date exceeding the current  date.')
                    $('.ETransDate').focus();
                    return false;
                }
                else {
                    ClearInlineAlert('lbl_ErrPdate1', 'td_EPdate1', '#FFFFFF')
                }
                if ($('.ETransAmt').val() == '' || $('.ETransAmt').val() == '.' || $('.ETransAmt').val() == '0') {
                    //                Glb_ShowAlert('Please enter valid amount');
                    InlineAlert('lbl_ErrPamount1', 'td_EPamount1', 'Please enter valid amount')
                    $('.ETransAmt').focus();
                    return false;
                }
                else {
                    ClearInlineAlert('lbl_ErrPamount1', 'td_EPamount1', '#FFFFFF')
                }

                if ($('.ETransAmt').val() == '') {
                    InlineAlert('lbl_ErrPamount1', 'td_EPamount1', 'Invalid transaction info!!! transaction amount can not be empty.')
                    $('.ETransAmt').focus();
                    return false;
                }
                else {
                    ClearInlineAlert('lbl_ErrPamount1', 'td_EPamount1', '#FFFFFF')
                }

                if ($('.ETransAmt').val() != '') {
                    if (parseFloat($('.ETransAmt').val()) == '0') {
                        InlineAlert('lbl_ErrPamount1', 'td_EPamount1', 'Invalid transaction info!!!.')
                        $('.ETransAmt').focus();
                        return false;
                    }
                    else {
                        ClearInlineAlert('lbl_ErrPamount1', 'td_EPamount1', '#FFFFFF')
                    }
                }
                if ($('.ETransAmt').val().length > 0) {
                    var amount = $('.ETransAmt').val();
                    var len = $('.ETransAmt').val().length;
                    for (var i = 0; i < len; i++) {
                        var k = amount.charAt(i);
                        var digits = "0123456789.";
                        if ((digits.indexOf(k, 0)) == -1) {
                            InlineAlert('lbl_ErrPamount1', 'td_EPamount1', 'Please enter valid amount')
                            $('.ETransAmt').val() = '';
                            $('.ETransAmt').focus();
                            return false;
                        }
                        else {
                            ClearInlineAlert('lbl_ErrPamount1', 'td_EPamount1', '#FFFFFF')
                        }
                    }
                }
                if ($('.ETNotes').val() != "") {
                    if ($('.ETNotes').val().length > 1000) {
                        InlineAlert('lbl_ErrNotes1', 'td_Epnotes1', 'Invalid transaction info!!! notes is exceeding the limit of 1000 characters.')
                        $('.ETNotes').focus();
                        return false;
                    }
                    else {
                        ClearInlineAlert('lbl_ErrNotes1', 'td_Epnotes1', '#FFFFFF')
                    }
                }


                var objradNotAgree = document.getElementById('Echkemail');
               // alert(objradNotAgree.checked);
                if (objradNotAgree.checked == true) {
                   // alert($('.ETransEmail').val());
                    if ($('.ETransEmail').val() == "") {
                        InlineAlert('lbl_ErrEmail', 'td_Email', 'Please enter email.')
                        return false;
                    }
                    else {
                        ClearInlineAlert('lbl_ErrEmail', 'td_Email', '#FFFFFF')
                    }
                }
                document.getElementById('tbl_submit').style.display = "none";
            }
        }
    </script>
</body>
     <script type="text/javascript">
        $(document).ready(function () {
            var patname = "@Model.custname";
            $("#lbl_PayPatientName").html(patname);
           @* var PFrom = "@ViewBag.lblEPayfrom";
            if (PFrom != null && PFrom != "") {
                document.getElementById("trEPayFrom").style.display = "";
                $("#lblEPayfrom").html(PFrom);
            } 
            else {
                document.getElementById("trEPayFrom").style.display = "none";
            }*@
            var Ptype = "@Model.paytype";
            if (Ptype == 'Credit Card') {
                document.getElementById('tdAuthETrans').style.display = '';

            }
            else {
                document.getElementById('tdAuthETrans').style.display = 'none';
            }
            $("#lbl_Paymentmode").html(Ptype);
            //$(".ETransDate").datepicker({
            //    dateFormat: 'mm/dd/yy',
            //    changeMonth: true,
            //    changeYear: true,
            //    //                showCurrentAtPos: 1,
            //    showWeeks: true,
            //    inline: true,
            //    numberOfMonths: [1, 1],
            //    yearRange: "1950:2020",
            //    showOn: "button",
            //    buttonImage: "../Images/calender.gif",
            //    buttonImageOnly: true

            //});
            var Pdate = "@Model.Transaction_Date";
            $(".ETransDate").val(Pdate);
            var Pamt = "@Model.Transaction_Amount";
            $('.ETransAmt').val(Pamt);
            if ($('.ETransEmail').val() != "") {
                document.getElementById("ETchkAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;' + "at&nbsp;" + $('.ETransEmail').val();
            }
            else {
                document.getElementById("ETchkAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;';
                $('.ETransEmail').attr("value",'');
            }
            $('.ETransEmail').keyup(
            
                    function (event) {
                        //alert('hi');
                        if ($('.ETransEmail').val() != "") {
                            document.getElementById("ETchkAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;' + "at&nbsp;" + $('.ETransEmail').val();
                        }
                        else {
                            document.getElementById("ETchkAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;';
                            $('.ETransEmail').attr("value",'');
                        }
                    }
            );
        });
    </script>
  
      <script type="text/javascript">

          function editTSuccess(data) {
              // aklert(data);
              //  alert(data.Success);
              if (data != '' & data.Success == true) {
                  // $('#updateDialog').dialog('close');
                  //var Practice_ID = data.Object.Practice_ID
                  //var Provider_ID = data.Object.Provider_ID
                  var Email = data.Object.Customer_Email
                  var PatientID = data.Object.PatientID;
                  var page_ind = data.Object.page_ind;
                  var NoOfRecords = data.Object.NoOfRecords;
                  var Date_range = data.Object.Date_range;
                  var PageNo = data.Object.PageNo;
                  var FromDate = data.Object.FromDate;
                  var ToDate = data.Object.ToDate;
                  var clientphone = data.Object.clientphone;
                  var type_id = data.Object.type_id == "null" ? null : data.Object.type_id;
                  var currentDate = $('#TransactionEDate').val();
                  var records = @ViewBag.pageRowCount;
                  if (FromDate != null) {
                      if (PageNo > 1) {
                          if (records == 1) {
                              PageNo = PageNo - 1;
                          }
                          else if (FromDate <= currentDate || records > 1) {
                              PageNo = PageNo;
                          }
                          else {
                              PageNo = PageNo - 1;
                          }
                      }
                  }
                  $('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
                  if (type_id != null) {
                      $('#divEditTran').dialog('close');
                      $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&Customer_Email=' + Email + '&type_id=' + type_id, function (data) { $('#dvLoading').dialog('close'); });
                  }
                  else if (PatientID != null) {
                      var PatientLogin_ID = data.Object.PatientLogin_ID;
                      $("#divEditTran").dialog('close');
                      $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&PatientID=' + PatientID + '&PatientLogin_ID=' + PatientLogin_ID + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&clientphone=' + clientphone + '&Customer_Email=' + Email, function (data) { $('#dvLoading').dialog('close'); }); 
                  }
                  else {
                      $("#divEditTran").dialog('close'); 
                      $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&Customer_Email=' + Email, function (data) { $('#dvLoading').dialog('close'); }); 
                  }
              }
                  //else if (data.ErrorMessage == 'expire') {
                  //    window.location.href = "../Home/SessionExpire";
                  //}
              else {
                  if (data != "_Logon_") {
                      // $('#updateDialog').dialog('close');
                      //alert(data.ErrorMessage);
                      InlineAlert('lbl_ErrEmail', 'td_Email', data.ErrorMessage)
                      $('.ETransEmail').focus();
                      document.getElementById('tbl_submit').style.display = "";
                      return false;
                  }
              }
        }
</script>
</html>
