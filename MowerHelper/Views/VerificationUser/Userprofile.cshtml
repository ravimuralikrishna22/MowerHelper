@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
@*    <meta name="viewport" content="width=device-width" />*@
   <title>Mower Helper-Find an Mower Helper</title>
    <style type="text/css" ></style>
    <link href="~/Content/style.css" rel="stylesheet" type="text/css" media="all" />
           @Styles.Render("~/Content/themes/base/TherpistStyles")
         @Scripts.Render("~/ThScripts/ElectricianHelpscripts")
         <link href="../../Content/style.css" type="text/css" />
      <style type="text/css">
                  tr.gridHead th:nth-child(1) { width: 30px; }
          tr.gridHead th:nth-child(2) { width: 200px; }
          tr.gridHead th:nth-child(3) { width: 200px; }
          tr.gridHead th:nth-child(4) { width: 250px; }
          tr.gridHead th:nth-child(5) { width: 350px; }
        .dvLoading .ui-dialog-titlebar{display:none;}
        
    </style>
             <script type="text/javascript">
                 function ondescriptionover(obj) {
                     //alert(obj);
                     document.getElementById(obj).style.position = 'absolute';
                     document.getElementById(obj).style.display = '';
                     return false;
                 }
                 function ondescriptionout(obj) {
                     document.getElementById(obj).style.display = 'none';
                     return false;
                 }
    </script>
<script language="javascript" type="text/javascript">



    function RBunvericheck() {
        var providertype = "nonverifiedprovider";

        window.location.href = '@Url.Action("Userprofile", "VerificationUser")?providertype=' + providertype; 

    }



    function RBvericheck() {
        var providertype = "verifiedprovider";
        window.location.href = '@Url.Action("Userprofile", "VerificationUser")?providertype=' + providertype; 

    }




        </script>
                <script type="text/javascript">
                    $(document).ready(function () {
                        $(".close3").live("click", function (e) {
                            var dialogDiv = $('#ProofLinkDialog');
                            dialogDiv.dialog('close');
                        });
                        $(".close1").live("click", function (e) {
                            var dialogDiv = $('#UpdcertDialog');
                            dialogDiv.dialog('close');
                        });
                        $(".close2").live("click", function (e) {
                            var dialogDiv = $('#LicLinkDialog');
                            dialogDiv.dialog('close');
                        });


                    });

    </script>
   <script type="text/javascript">
       $(function () {
           $(".ddlactionclass").change(function () {
               var data = $(this).find("option:selected").val();
               if (data != "" && data != "0") {
                   var win = window.open(data, '_blank');
               }

           });
       });


  </script>


    
</head>
<body>
    @using (Html.BeginForm("ProviderProfile", "VerificationUser", FormMethod.Get, null))
    {
        Html.RenderAction("Topsection", "Tools");
        <br />
                        

                                <br/>
    <div id="main-content">
    <table class="border_style" cellspacing="1" cellpadding="6" width="100%" align="center"
                        border="0">
                        <tr height="20" runat="server" class="background_color">
                            <td align="left">
                                                                                                                                        @{
        bool str1 = false;
        bool str2 = false;
                                                                             }
                                                                           @if (ViewBag.verify != null)
                                                                           {
                                                                               if (ViewBag.verify.ToString() == "Y")
                                                                               {
                                                                                   str1 = false;
                                                                                   str2 = true;
                                                                               }
                                                                               else
                                                                               {
                                                                                   str1 = true;
                                                                                   str2 = false;
                                                                               }
                                                                           }
                                    @Html.RadioButton("RBunveri", "1", str1, new { onclick = "return RBunvericheck();" })&nbsp; Unverified providers      
                                     @Html.RadioButton("RBveri", "1", str2, new { onclick = "return RBvericheck();" })&nbsp; Verified providers
                            </td>
                            </tr>
                            </table>
                            <br />
        <div class="content-box">
     <div class="content-box-content">
                                                                       @{ WebGrid provgrid = new WebGrid(rowsPerPage: 10);}
                                            @{WebGrid grid = provgrid.Bind(rowCount: Convert.ToInt32(ViewBag.totrec), source: Model, autoSortAndPage: false);
                                              if (grid.TotalRowCount != 0)
                                              {
                                                  int count = 0;
                                                  string pager = grid.Pager().ToString();
                                                  string pageno = (Request["page"] == null ? "1" : Request["page"]);
                                                  string newpager = System.Text.RegularExpressions.Regex.Replace(pager, "(\\d+) ", "<span class='selected'>" + pageno + "</span>");
                                                  if (ViewBag.verify != "Y")
                                                  {
                                                      string gridhtml = grid.GetHtml(tableStyle: "gridTable", headerStyle: "gridHead", rowStyle: "gridRow", alternatingRowStyle: "gridAltRow",

                                                      columns: grid.Columns(

                                                      grid.Column("SlNo", "#", canSort: false),

                                                            grid.Column("ProviderName", "Provider name", canSort: false),
                                                              grid.Column("", "Mower helper license", canSort: false,
                                                        format:@<text>
                                             @{
                                                 string ElectricianFillename = (string)item.ElectricianFillename;
                                                 if (!string.IsNullOrEmpty(ElectricianFillename))
                                                 {
                                            @Html.ActionLink(ElectricianFillename, "electricianslicDownload", new {certname=((string)item.ElctricianCustmiseImage), certname1 = ElectricianFillename }, new { @class = "electrilic", @style = "font-weight:bold;color:#0066CC;cursor:pointer;" })
                                                 }
                                                 else
                                                 {
                                  <span>-</span>
                                                 }
                                            }
         </text>),
                                                            grid.Column("", "Driver license", canSort: false,
                                                        format:@<text>
                                            @{
                                                string DriverFilename = (string)item.DriverFilename;
                                                if (!string.IsNullOrEmpty(DriverFilename))
                                                {
                                            @Html.ActionLink(DriverFilename, "electricianslicDownload", new { certname=((string)item.DriverCustomiseImage),certname1 = DriverFilename }, new { @class = "electrilic", @style = "font-weight:bold;color:#0066CC;cursor:pointer;" })
                                                }
                                                else
                                                {
                                  <span>-</span>
                                                }
                                            }
         </text>),
                                                                                                      grid.Column("", "License settings", canSort: false,
                                                            format:@<text>@*@Html.ActionLink("Click here to edit license", "Licensesettings", new { ProviderId = (int)item.Provider_ID }, new { @class = "LicLink", @style = "font-weight:bold;color:#0066CC;cursor:pointer;" })*@
                                            <a href="#" class = "LicLink" style = "font-weight:bold;color:#0066CC;cursor:pointer;" onclick="return Displaydialog('LicLinkDialog','@Url.Action("Licensesettings", new { ProviderId = (int)item.Provider_ID })','auto',1200,'dvLoading',null,null);">Click here to edit license</a></text>),
                                                            grid.Column("", "Proof certificate", canSort: false,
                                                            format:@<text>@*@Html.ActionLink("Edit Proof certificate", "ProofCertificates", new { ProviderId = (int)item.Provider_ID }, new { @class = "ProofLink", @style = "font-weight:bold;color:#0066CC;cursor:pointer;" })*@
                                            <a href="#" class = "ProofLink" style = "font-weight:bold;color:#0066CC;cursor:pointer;" onclick="return Displaydialog('ProofLinkDialog','@Url.Action("ProofCertificates", new { ProviderId = (int)item.Provider_ID })','auto',1200,'dvLoading',null,null);">Edit Proof certificate</a></text>),
                       grid.Column("Action", canSort: false, style: "action", format: @<text>


  @{
    
      string stateid = item.state_id;
      MowerHelper.Models.Classes.clsCommonFunctions objcommn = new MowerHelper.Models.Classes.clsCommonFunctions();
      System.Data.SqlClient.SqlDataReader objReader = default(System.Data.SqlClient.SqlDataReader);
      System.Data.IDataParameter[] paramlist = { new System.Data.SqlClient.SqlParameter("@in_state_id", stateid) };
      objcommn.AddInParameters(paramlist);
      objReader = objcommn.GetDataReader("Help_dbo.St_get_verification_urls");
      IList<SelectListItem> _result1 = new List<SelectListItem>();
      while (objReader.Read())
      {
          _result1.Add(new SelectListItem
          {
              Text = objReader["sitename"].ToString(),
              Value = objReader["siteurl"].ToString(),
          });
          ViewBag.result = _result1;
      }
      objReader.Close();
      MowerHelper.Models.Classes.StateCity obj = new MowerHelper.Models.Classes.StateCity();
      if (ViewBag.result == null)
      {
          _result1.Add(new SelectListItem
          {
              Text = "",
              Value = "0",
          });
          ViewBag.result = _result1;
      }
     }
                                                                                             @Html.DropDownList("ddlaction", new SelectList(ViewBag.result, "Value", "Text"), "-- Select --",
                                                                                  new { @class = "ddlactionclass", style = "font-family:arial;font-size:13px;height:20px;width:400px;" })</text>)


                                                                        )).ToString();


                                                      gridhtml = System.Text.RegularExpressions.Regex.Replace(gridhtml, "<tfoot>([^<]*|<[^/]*|</[^t]*)*</tfoot>", "");
                            @(new HtmlString(gridhtml))
                                                  }
                                                  else
                                                  {
                                                      string gridhtml = grid.GetHtml(tableStyle: "gridTable", headerStyle: "gridHead", rowStyle: "gridRow", alternatingRowStyle: "gridAltRow",

                                                      columns: grid.Columns(

                                                      grid.Column("SlNo", "#", canSort: false, style: "width=5%"),

                                                            grid.Column("ProviderName", "Provider name", canSort: false),
                                                            grid.Column("verifiedon", "verified on", canSort: false),
                                                            grid.Column("verifiedby", "verified by", canSort: false),
                                                            grid.Column("", "Mower helper license", canSort: false,
                                                        format:@<text>
                                             @{
                                                 string ElectricianFillename = (string)item.ElectricianFillename;
                                                 if (!string.IsNullOrEmpty(ElectricianFillename))
                                                 {
                                            @Html.ActionLink(ElectricianFillename, "electricianslicDownload", new {certname=((string)item.ElctricianCustmiseImage), certname1 = ElectricianFillename }, new { @class = "electrilic", @style = "font-weight:bold;color:#0066CC;cursor:pointer;" })
                                                 }
                                                 else
                                                 {
                                  <span>-</span>
                                                 }
                                            }
         </text>),
                                                            grid.Column("", "Driver license", canSort: false,
                                                        format:@<text>
                                            @{
                                                string DriverFilename = (string)item.DriverFilename;
                                                if (!string.IsNullOrEmpty(DriverFilename))
                                                {
                                            @Html.ActionLink(DriverFilename, "electricianslicDownload", new { certname=((string)item.DriverCustomiseImage),certname1 = DriverFilename }, new { @class = "electrilic", @style = "font-weight:bold;color:#0066CC;cursor:pointer;" })
                                                }
                                                else
                                                {
                                  <span>-</span>
                                                }
                                            }
         </text>),
                                                            grid.Column("", "Proof certificate", canSort: false,
                                                            format:@<text>@*@Html.ActionLink("Edit Proof certificate", "ProofCertificates", new { ProviderId = (int)item.Provider_ID }, new { @class = "ProofLink", @style = "font-weight:bold;color:#0066CC;cursor:pointer;" })*@
                                            <a href="#" class = "ProofLink" style = "font-weight:bold;color:#0066CC;cursor:pointer;" onclick="return Displaydialog('ProofLinkDialog','@Url.Action("ProofCertificates", new { ProviderId = (int)item.Provider_ID })','auto',1200,'dvLoading',null,null);">Edit Proof certificate</a></text>)


                                                                        )).ToString();


                                                      gridhtml = System.Text.RegularExpressions.Regex.Replace(gridhtml, "<tfoot>([^<]*|<[^/]*|</[^t]*)*</tfoot>", "");
                            @(new HtmlString(gridhtml))

                                                  }
                            
                            <br />

                            <div class="gridFooter" style="padding-left: 500px;">@(new HtmlString(newpager))</div>  
                            <br />
                                              }
                                              else
                                              {
                            <table id="divoutmsg" width="100%">
                                <tr>
                                    <td align="center" valign="middle" height="25px">
                                        <span id="lblOutMsg" style="font-size: 13px; font-weight: bold;" class="errormsg">
                                            No providers found. </span>
                                    </td>
                                </tr>
                            </table>
                                              }
                        }
  </div>
 
    
    </div>

    </div>
            <div id="UpdcertDialog" title="Provider certificates">
      </div>
                    <div id="ProofLinkDialog" title="Edit proof certificate">
      </div>
                            <div id="LicLinkDialog" title="License settings">
      </div>
                <div id="dvLoading" style="display:none; text-align:center; vertical-align:middle">
     <img src="../Images/ajax-loader2.gif" alt="Processing"  />
    </div>
                                              if (grid.Rows.Count <= 9)
                                              {
                                                  if (grid.Rows.Count <= 4)
                                                  {
            <table id="tblbottom" runat="server">
        <tr>
   <td style="padding-top: 370px;"></td>
  </tr></table>
                                                  }
                                                  else
                                                  {
      <table id="tblbottom1" runat="server">
        <tr>
   <td style="padding-top: 200px;"></td>
  </tr></table>
                                                  }
                                              }

        <script type="text/javascript">
            var linkObj;
            $(function () {
                $('#UpdcertDialog').dialog({
                    autoOpen: false,
                    width: 1200,
                    //                    height: 500,
                    resizable: false,
                    modal: true

                });
                //$('#ProofLinkDialog').dialog({
                //    autoOpen: false,
                //    width: 1200,
                //    resizable: false,
                //    modal: true

                //});
                //$('#LicLinkDialog').dialog({
                //    autoOpen: false,
                //    width: 1200,
                //    resizable: false,
                //    modal: true

                //});

                $(".Updcert").click(function () {
                    linkObj = $(this);
                    var dialogDiv = $('#UpdcertDialog');
                    $('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
                    var viewUrl = linkObj.attr('href');
                    $.get(viewUrl, function (data) {
                        dialogDiv.html(data);
                        $('#dvLoading').dialog('close');
                        dialogDiv.dialog('open');
                    });
                    return false;
                });

                //$(".ProofLink").click(function () {
                //    linkObj = $(this);
                //    var dialogDiv = $('#ProofLinkDialog');
                //    $('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
                //    var viewUrl = linkObj.attr('href');
                //    $.get(viewUrl, function (data) {
                //        dialogDiv.html(data);
                //        $('#dvLoading').dialog('close');
                //        dialogDiv.dialog('open');
                //    });
                //    return false;
                //});
                //$(".LicLink").click(function () {
                //    linkObj = $(this);
                //    var dialogDiv = $('#LicLinkDialog');
                //    $('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
                //    var viewUrl = linkObj.attr('href');
                //    $.get(viewUrl, function (data) {
                //        dialogDiv.html(data);
                //        $('#dvLoading').dialog('close');
                //        dialogDiv.dialog('open');
                //    });
                //    return false;
                //});

            });
    </script>
        
                                              Html.RenderAction("Bottomsections", "Tools");


    }
               

</body>
</html>
