@model MowerHelper.Models.BLL.Billing.RPBilling
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
@*    <meta name="viewport" content="width=device-width" />*@
    <title>Mower Helper-Find an Mower Helper</title> 
    <script src="~/Scripts/Expire.js" type="text/javascript"></script>
    <script src="~/Scripts/DatepickerNew.js" type="text/javascript"></script>
</head>
<body>
    @using (Ajax.BeginForm("EditPayment", "Billing", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "editPSuccess",
        OnComplete = "SessionExpireFail"

    }, new { @id = "newPmtform" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("Date_range")
        @Html.Hidden("PageNo")
        @Html.Hidden("NoOfRecords")
        @Html.Hidden("PatientID")
        @Html.Hidden("PatientLogin_ID")
        @Html.Hidden("FromDate")
        @Html.Hidden("ToDate")
        @Html.Hidden("page_ind")
        @Html.Hidden("Transaction_ID")
        @Html.Hidden("fromReferenceId")
        @Html.Hidden("FromReferenceType_ID")
        @Html.Hidden("ToReferenceType_ID")
        @Html.Hidden("type_id")
        <table border="0" cellpadding="6" cellspacing="1" class="border_style" width="100%">
            <tr class="white_color">
                <td width="20%" align="right"><strong>Client name :&nbsp;</strong> </td>
                <td>
                    <span id="lblPayPatientName"></span>
                </td>
            </tr>
             @*<tr class="white_color" id="trEPayFrom" style="display: none">
                <td width="20%" align="right">
                   <strong>Payment From :&nbsp;</strong>
                </td>
                <td align="left">
                <span id="lblEPayfrom"></span>
                </td>
            </tr>*@
                                                <tr class="white_color">
                    <td width="20%" align="right">
                    <strong>Email :&nbsp;</strong>
                    </td>
                    <td align="left" id="tdEmail">
                    @Html.TextBox("Customer_Email", Model.Customer_Email, new { @class = "textfield PmtEmail", @maxLength = 50, @style = "width:240px" }) &nbsp;&nbsp;<span id="lblErrEmail" style="color: Black; font-weight: bold;"></span>
                    </td>
                </tr>
            <tr class="white_color">
                <td width="20%" align="right"><strong>Mode of payment :&nbsp;</strong></td>
                <td>
                    <span id="lblPaymentmode"></span>
                </td>
            </tr>
             <tr class="white_color" id="tdAuthEPmt"  style="display:none">
                    <td width="20%" align="right">
                    <strong>Last 4 digits of credit card :&nbsp;</strong>
                    </td>
                    <td align="left">
                     @Html.TextBox("Authorizednumber", Model.Authorizednumber, new { @class = "textfield", @maxLength = 4, @style = "width:90px;" })
                    </td>
                </tr>
                @if (Model.paytype == "Check")
                {
                    //if (ViewBag.checkno != null & ViewBag.checkno != "")
                    //{
                  <tr class="white_color" id="trPmtchechno" >
                    <td width="20%" align="right">
                    <strong>Check number :&nbsp;</strong>
                    </td>
                    <td align="left">
                  @*  <span id="lblchecknum" style="font-weight:bold">@ViewBag.checkno</span>*@
                         @Html.TextBox("ChecksNo", Model.ChecksNo, new { @class = "textfield", @maxLength = 50, @style = "width:150px;" })
                    </td>
                </tr>
                    //}
                }
            <tr class="white_color">
                <td width="20%" align="right"><strong>Transaction mode:&nbsp;</strong> </td>
                <td id="tdEPde1">
                    <label id="TxtTranTypePayment"></label>
@*                    @Html.TextBox("TxtTranTypePayment", null, new { @class = "textfield", @maxLength = 50, @style = "width:240px" }) &nbsp;&nbsp;<span id="lblTransactionTypeP" style="color: Black; font-weight: bold;"></span>*@
                </td>
            </tr>

          @*  ////*@
            <tr class="white_color">
                <td width="20%" align="right"><font color="red">*</font><strong>Transaction date:&nbsp;</strong> </td>
                <td id="tdEPdate1">
                    @Html.TextBox("TransactionPmtDate", DateTime.Now.ToString("MM/dd/yyyy"), new { @class = "textfield EditPmtDate Datefield", @style = "width:100px" })&nbsp;&nbsp;<span id="lblErrPdate1" style="color:Black;font-weight:bold;"></span>
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right"><font color="red">*</font><strong>Amount :&nbsp;</strong></td>
                <td id="tdEPamount1">
                    @Html.TextBox("Transaction_Amount", null, new { @class = "textfield EPmtAmount", @style = "width:100px", @onkeypress = "return checkValidNumeric(Transaction_Amount,8,2,event)" })&nbsp;&nbsp;<span id="lblErrPamount1" style="color:Black;font-weight:bold;"></span>
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right"> <strong>Notes :&nbsp;</strong> </td>
                <td align="left" id="tdEpnotes1">
                        <table>
                            <tr>
<td>
    <table style="width:100%;">
        <tr style="width:100%;">
            <td style="width:30%;"> 
                <table>
                    <tr>
                        
                        <td >@Html.TextArea("Notes", Model.Notes, 3, 3, new { @class = "textfield EPNotes", @style = "width:340px;height:78px;" })&nbsp;&nbsp;</td>
                        <td><img src="~/Images/help2.png" id="Img3" onmouseover="ddrivetip('@ViewBag.pmtENote',300)" onmouseout="hideddrivetip()" style="vertical-align:middle" /></td>
                    </tr>
                </table>
                 </td>
            <td style="width:70%;">
                <table>
                    <tr>
                        <td><span>(These notes won't be sent to client. They  are for your usage.)</span>
                            <br />
                            </td>
                    </tr>
                    <tr>
                        <td>
                            (Maximum length 1000 characters)
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</td>
                            </tr>
                            <tr>
                                <td>
<span id="lblErrNotes1" style="color: Black; font-weight: bold;"></span>
                                    </td>
                            </tr>
                        </table>
                    </td>
            </tr>
                        <tr class="white_color">
                    <td align="center" colspan="2">
              <span style="font-weight: bold;">   @Html.CheckBox("EPchkemail", true, new { onkeypress = "return fnsetfocus(event,'btnSave')", autocomplete = "off" })
                  <label id="chkemailAgree" for="chkemailAgree">Email receipt to client</label>
              </span>
                    </td>
                </tr>
        </table>@*
        @Html.Raw(ViewBag.editPaydist)
        *@<table id="tblEsubmit" border="0" cellpadding="0" cellspacing="0" width="98%">
            <tr style="height: 50px">
                <td align="right">
                    <input type="submit" value="save" class="button" name="btnsave" onclick="return ValidatePaymentInfo();" />
                    <input type="button" name="btnCancel" class="Epmtclose button" value="Cancel" />
                </td>
            </tr>
        </table>
    }
    <script type="text/javascript">
        function isValidDate(strDate) {
            var dateStr = strDate; var datePat = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{4})$/; var month, day, year; var monthArray = new Array(); var matchArray = dateStr.match(datePat); var intShowI; var args; var strError = ""; monthArray[0] = "January"; monthArray[1] = "February"; monthArray[2] = "March"; monthArray[3] = "April"; monthArray[4] = "May"; monthArray[5] = "June"; monthArray[6] = "July"; monthArray[7] = "August"; monthArray[8] = "September"; monthArray[9] = "October"; monthArray[10] = "November"; monthArray[11] = "December"; args = IsValidDate.arguments
            if (dateStr != "") {
                if (matchArray == null)
                { strError = "Please enter date in mm/dd/yyyy format."; return strError; }
                month = matchArray[1]; day = matchArray[3]; year = matchArray[4]; if (year <= 1753)
                { strError = "Please enter a year greater than 1753."; return strError; }
                if (month < 1 || month > 12)
                { strError = "Month must be between 1 and 12."; return strError; }
                if (day < 1 || day > 31)
                { strError = "Day must be between 1 and 31."; return strError; }
                if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) {
                    strError = monthArray[month - 1] + " doesn't have 31 days!"
                    return strError;
                }
                if (month == 2) {
                    var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)); if (day > 29 || (day == 29 && !isleap))
                    { strError = "February " + year + " doesn't have " + day + " days!"; return strError; }
                }
            }
            return strError;
        }
        function ValidatePaymentInfo() {
            ClearInlineAlert('lblErrPamount1', 'tdEPamount1', '#FFFFFF')
            ClearInlineAlert('lblErrEmail', 'tdEmail', '#FFFFFF')
            ClearInlineAlert('lblErrPdate1', 'tdEPdate1', '#FFFFFF')
            ClearInlineAlert('lblErrNotes1', 'tdEpnotes1', '#FFFFFF')
            var stremail = trim($('.PmtEmail').val());
            $('.PmtEmail').val(stremail);// = stremail;


            if ($('.PmtEmail').val() != '') {
               
                if (ValidateEmail($('.PmtEmail').val()) == 0) {
                    InlineAlert('lblErrEmail', 'tdEmail', 'Please enter valid email.')
                    $('.PmtEmail').focus();
                    return false;
                }
                else {
                    
                    ClearInlineAlert('lblErrEmail', 'tdEmail', '#FFFFFF')
                }
            }
            if ($('.EditPmtDate').val() == "" || $('.EditPmtDate').val() == "mm/dd/yyyy") {
                //                Glb_ShowAlert("Invalid payment info!!! payment date can not be empty.");
                ClearInlineAlert('lblErrEmail', 'tdEmail', '#FFFFFF')
                InlineAlert('lblErrPdate1', 'tdEPdate1', 'Invalid transaction info!!! transaction date can not be empty.')
                $('.EditPmtDate').focus();
                return false;
            }
            else {
                ClearInlineAlert('lblErrPdate1', 'tdEPdate1', '#FFFFFF')
                var strRetAlert = isValidDate($('.EditPmtDate').val())
                if (strRetAlert != "") {
                    //                    Glb_ShowAlert(strRetAlert);
                    InlineAlert('lblErrPdate1', 'tdEPdate1', strRetAlert)
                    $('.EditPmtDate').focus();
                    return false;
                }
                else {
                    ClearInlineAlert('lblErrPdate1', 'tdEPdate1', '#FFFFFF')
                }
                var dtCur = new Date();
                var dtGiven = new Date($('.EditPmtDate').val());
                if (dtCur < dtGiven) {
                    //                Glb_ShowAlert("Invalid charge info!!! charge date exceeding the current  date.");
                    InlineAlert('lblErrPdate1', 'tdEPdate1', 'Invalid transaction info!!! transaction date exceeding the current  date.')
                    $('.EditPmtDate').focus();
                    return false;
                }
                else {
                    ClearInlineAlert('lblErrPdate1', 'tdEPdate1', '#FFFFFF')
                }
                if ($('.EPmtAmount').val() == '' || $('.EPmtAmount').val() == '.' || $('.EPmtAmount').val() == '0') {
                    //                Glb_ShowAlert('Please enter valid amount');
                    
                    InlineAlert('lblErrPamount1', 'tdEPamount1', 'Please enter valid amount')
                    $('.EPmtAmount').focus();
                    return false;
                }
                else {
                   // alert('b');
                    ClearInlineAlert('lblErrPamount1', 'tdEPamount1', '#FFFFFF')
                }

                if ($('.EPmtAmount').val() == '') {
                   
                    InlineAlert('lblErrPamount1', 'tdEPamount1', 'Invalid transaction info!!! transaction amount can not be empty.')
                    $('.EPmtAmount').focus();
                    return false;
                }
                else {
                   // alert('d');
                    ClearInlineAlert('lblErrPamount1', 'tdEPamount1', '#FFFFFF')
                }

                if ($('.EPmtAmount').val() != '') {
                    if (parseFloat($('.EPmtAmount').val()) == '0') {
                        InlineAlert('lblErrPamount1', 'tdEPamount1', 'Invalid payment info!!!.')
                        $('.EPmtAmount').focus();
                        return false;
                    }
                    else {
                        ClearInlineAlert('lblErrPamount1', 'tdEPamount1', '#FFFFFF')
                    }
                }
                if ($('.EPmtAmount').val().length > 0) {
                    var amount = $('.EPmtAmount').val();
                    var len = $('.EPmtAmount').val().length;
                    for (var i = 0; i < len; i++) {
                        var k = amount.charAt(i);
                        var digits = "0123456789.";
                        if ((digits.indexOf(k, 0)) == -1) {
                            InlineAlert('lblErrPamount1', 'tdEPamount1', 'Please enter valid amount')
                            $('.EPmtAmount').val() = '';
                            $('.EPmtAmount').focus();
                            return false;
                        }
                        else {
                            ClearInlineAlert('lblErrPamount1', 'tdEPamount1', '#FFFFFF')
                        }
                    }
                }
                
                
                if ($('.EPNotes').val() != "") {
                   
                    if ($('.EPNotes').val().length > 1000) {
                        InlineAlert('lblErrNotes1', 'tdEpnotes1', 'Invalid transaction info!!! notes is exceeding the limit of 1000 characters.')
                        $('.EPNotes').focus();
                        return false;
                    }
                    else {
                        ClearInlineAlert('lblErrNotes1', 'tdEpnotes1', '#FFFFFF')
                    }
                }

                var objradNotAgree = document.getElementById('EPchkemail');
                if (objradNotAgree.checked == true) {
                    if ($('.PmtEmail').val() == "") {
                        
                        ClearInlineAlert('lblErrEmail', 'tdEmail', '#FFFFFF')
                        InlineAlert('lblErrEmail', 'tdEmail', 'Please enter email.')
                        return false;
                    }
                    else {
                        ClearInlineAlert('lblErrEmail', 'tdEmail', '#FFFFFF')
                    }
                }
                document.getElementById('tblEsubmit').style.display = "none";

            }
        }
    </script>
     <script type="text/javascript">
         $(document).ready(function () {
             var patname = "@Model.custname";
            $("#lblPayPatientName").html(patname);
           @* var PFrom = "@ViewBag.lblEPayfrom";
            if (PFrom != null && PFrom != "") {
                document.getElementById("trEPayFrom").style.display = "";
                $("#lblEPayfrom").html(PFrom);
            } 
            else {
                document.getElementById("trEPayFrom").style.display = "none";
            }*@
            var Ptype = "@Model.paytype";
            if (Ptype == 'Credit Card') {
                document.getElementById('tdAuthEPmt').style.display = '';

            }
            else {
                document.getElementById('tdAuthEPmt').style.display = 'none';
            }
            $("#lblPaymentmode").html(Ptype);
           // $(".EditPmtDate").datepicker({
           //     dateFormat: 'mm/dd/yy',
           //     changeMonth: true,
           //     changeYear: true,
           //     //                showCurrentAtPos: 1,
           //     showWeeks: true,
           //     inline: true,
           //     numberOfMonths: [1, 1],
           //     yearRange: "1950:2020",
           //     showOn: "button",
           //     buttonImage: "../Images/calender.gif",
           //     buttonImageOnly: true
           //});
            var Pdate = "@Model.Transaction_Date";
             $(".EditPmtDate").val(Pdate);
            var Pamt = "@Model.Transaction_Amount";
             $('.EPmtAmount').val(Pamt);
             if ($('.PmtEmail').val() != "") {
                 document.getElementById("chkemailAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;' + "at&nbsp;" + $('.PmtEmail').val();
             }
             else {
                 document.getElementById("chkemailAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;';
             }
             $('.PmtEmail').keyup(
                     function (event) {
                         if ($('.PmtEmail').val() != "") {
                             document.getElementById("chkemailAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;' + "at&nbsp;" + $('.PmtEmail').val();
                        }
                        else {
                            document.getElementById("chkemailAgree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;';
                        }
                    }
            );
        });
    </script>
</body>
  @*<script type="text/javascript">
      //function isValidDate(strDate) {
      //    var dateStr = strDate; var datePat = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{4})$/; var month, day, year; var monthArray = new Array(); var matchArray = dateStr.match(datePat); var intShowI; var args; var strError = ""; monthArray[0] = "January"; monthArray[1] = "February"; monthArray[2] = "March"; monthArray[3] = "April"; monthArray[4] = "May"; monthArray[5] = "June"; monthArray[6] = "July"; monthArray[7] = "August"; monthArray[8] = "September"; monthArray[9] = "October"; monthArray[10] = "November"; monthArray[11] = "December"; args = IsValidDate.arguments
      //    if (dateStr != "") {
      //        if (matchArray == null)
      //        { strError = "Please enter date in mm/dd/yyyy format."; return strError; }
      //        month = matchArray[1]; day = matchArray[3]; year = matchArray[4]; if (year <= 1753)
      //        { strError = "Please enter a year greater than 1753."; return strError; }
      //        if (month < 1 || month > 12)
      //        { strError = "Month must be between 1 and 12."; return strError; }
      //        if (day < 1 || day > 31)
      //        { strError = "Day must be between 1 and 31."; return strError; }
      //        if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) {
      //            strError = monthArray[month - 1] + " doesn't have 31 days!"
      //            return strError;
      //        }
      //        if (month == 2) {
      //            var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)); if (day > 29 || (day == 29 && !isleap))
      //            { strError = "February " + year + " doesn't have " + day + " days!"; return strError; }
      //        }
      //    }
      //    return strError;
      //}
      
</script>*@
    <script type="text/javascript">

        function editPSuccess(data) {
            // aklert(data);
            //  alert(data.Success);
            if (data != '' & data.Success == true) {
                // $('#updateDialog').dialog('close');
                //var Practice_ID = data.Object.Practice_ID
                //var Provider_ID = data.Object.Provider_ID
                //JSON.parse(data.Object);
                var Email = data.Object.Customer_Email;
                if (Email == null) {
                    Email = '';
                }
                var PatientID = data.Object.PatientID;
                var page_ind =  data.Object.page_ind;
                var NoOfRecords = data.Object.NoOfRecords;
                var Date_range = data.Object.Date_range;
                var PageNo = data.Object.PageNo;
                var FromDate = data.Object.FromDate;
                var ToDate = data.Object.ToDate;
                var type_id = data.Object.type_id == "null" ? null : data.Object.type_id;
                var currentDate = $('#TransactionPmtDate').val();
                var records = @ViewBag.pageRowCount;
                if (FromDate != null) {
                    if (PageNo > 1) {
                        if (records == 1) {
                            PageNo = PageNo - 1;
                        }
                        else if (FromDate <= currentDate || records > 1) {
                            PageNo = PageNo;
                        }
                        else {
                            PageNo = PageNo - 1;
                        }
                    }
                }
                $('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
                if (type_id != null) {
                    $('#divEditPay').dialog('close');
                    $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&Customer_Email=' + Email + '&type_id=' + type_id, function (data) { $('#dvLoading').dialog('close'); });
                }
                else if (PatientID != null) {
                    var PatientLogin_ID = data.Object.PatientLogin_ID;
                    $("#divEditPay").dialog('close');
                    $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&PatientID=' + PatientID + '&PatientLogin_ID=' + PatientLogin_ID + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&Customer_Email=' + Email, function (data) { $('#dvLoading').dialog('close'); });
                }
                else {
                    $("#divEditPay").dialog('close');
                    $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&Customer_Email=' + Email, function (data) { $('#dvLoading').dialog('close'); });
                }
            }
            //else if (data.ErrorMessage == 'expire') {
            //    window.location.href = "../Home/SessionExpire";
            //}
            else {
                if (data != "_Logon_") {
                    // $('#updateDialog').dialog('close');
                    //alert(data.ErrorMessage);
                    InlineAlert('lblErrEmail', 'tdEmail', data.ErrorMessage)
                    $('.PmtEmail').focus();
                    document.getElementById('tblEsubmit').style.display = "";
                    return false;
                }
            }
        }
</script>
</html>
