@model MowerHelper.Models.BLL.Billing.RPBilling
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    @*  <meta name="viewport" content="width=device-width" />*@
    <title>Mower Helper-Find an Mower Helper</title>
    <script src="~/Scripts/Expire.js" type="text/javascript"></script>
    <script src="~/Scripts/DatepickerNew.js" type="text/javascript"></script>
</head>
<body>

    @using (Ajax.BeginForm("EditCharge", "Billing", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "editCSuccess",
        OnComplete = "SessionExpireFail"

    }, new { @id = "newPmtform" }))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("trCid")
        @Html.Hidden("patchgId")
        @Html.Hidden("Date_range")
        @Html.Hidden("PageNo")
        @Html.Hidden("NoOfRecords")
        @Html.Hidden("PatientID")
        @Html.Hidden("PatientLogin_ID")
        @Html.Hidden("FromDate")
        @Html.Hidden("ToDate")
        @Html.Hidden("page_ind")
        @Html.Hidden("clientphone")
        @Html.Hidden("type_id")
        
        <table border="0" cellpadding="6" cellspacing="1" class="border_style" width="100%">
            <tr class="white_color">
                <td width="20%" align="right">
                    <strong>Client name :&nbsp;</strong>
                </td>
                <td align="left">
                    <span id="lblPatientName"></span>
                </td>
            </tr>
            @* <tr class="white_color" style="display: none">
                <td width="20%" align="right">
                    <font color="red">*</font><strong>Patient name :&nbsp;</strong>
                </td>
                <td align="left">
                </td>
            </tr>
                 <tr class="white_color" id="trEChgTo" style="display: none">
                <td width="20%" align="right">
                   <strong>Charge to :&nbsp;</strong>
                </td>
                <td align="left">
                <span id="lblEChargeTo"></span>
                </td>
            </tr>*@
            @*   <tr class="white_color">
                <td width="20%" align="right">
                    <font color="red">*</font><strong>Type of charge :&nbsp;</strong>
                </td>
                <td align="left">
                    <span id="lblchargtype"></span>
                </td>
            </tr>*@
            <tr class="white_color">
                <td width="20%" align="right">
                    <strong>Email :&nbsp;</strong>
                </td>
                <td align="left" id="tdcEmail">
                    @Html.TextBox("Customer_Email", Model.Customer_Email, new { @class = "textfield ChgEmail", @maxLength = 50, @style = "width:240px" }) &nbsp;&nbsp;<span id="lblErrCmail" style="color: Black; font-weight: bold;"></span>
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right">
                    <strong>Transaction Mode :&nbsp;</strong>
                </td>
                <td align="left">
                    <label id="TxtTransactionType"></label>

                    @*                     @Html.TextBox("TxtTransactionType", null, new { @class = "textfield", @maxLength = 50, @style = "width:240px" }) &nbsp;&nbsp;<span id="lblTransactionType" style="color: Black; font-weight: bold;"></span>*@
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right">
                    <font color="red">*</font><strong>Transaction date :&nbsp;</strong>
                </td>
                <td align="left" id="tdEcDate1">
                    @Html.TextBox("TransactionChgDate", DateTime.Now.ToString("MM/dd/yyyy"), new { @class = "textfield TransChgDate Datefield", @style = "width:100px" })&nbsp;&nbsp;<span id="lblErrCDate1" style="color: Black; font-weight: bold;"></span>
                </td>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right">
                    <font color="red">*</font><strong>Amount :&nbsp;</strong>
                </td>
                <td align="left" id="tdECamount1">
                    @Html.TextBox("Transaction_Amount", null, new { @class = "textfield EChgAmt", @maxLength = 10, @style = "width:100px", onkeypress = "return checkValidNumeric(Transaction_Amount,8,2,event)" })&nbsp;&nbsp;<span id="lblErrCamount1" style="color: Black; font-weight: bold;"></span>
                </td>
            </tr>
            <tr>
            </tr>
            <tr class="white_color">
                <td width="20%" align="right">
                    <strong>Notes :&nbsp;</strong>
                </td>
                <td align="left" id="tdECNote1">
                    <table>
                        <tr>
                            <td>
                                <table style="width: 100%;">
                                    <tr style="width: 100%;">
                                        <td style="width: 30%;">
                                            <table>
                                                <tr>
                                                    <td>@Html.TextArea("Notes", Model.Notes, 3, 3, new { @class = "textfield EcNotes", @style = "width:340px;height:78px;" })</td>
                                                    <td>
                                                        <img src="~/Images/help2.png" id="Img3" onmouseover="ddrivetip('@ViewBag.chkgENote',300)" onmouseout="hideddrivetip()" style="vertical-align:middle" /></td>
                                                </tr>
                                            </table>
                                        </td>
                                        <td style="width: 70%;">
                                            <table>
                                                <tr>
                                                    <td style="text-align: left;"><span>(These notes won't be sent to client. They  are for your usage.)</span>
                                                        <br />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>(Maximum length 1000 characters)
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span id="lblErrCNote1" style="color: Black; font-weight: bold;"></span>
                            </td>
                        </tr>
                    </table>
                </td>

            </tr>
            <tr class="white_color">
                <td align="center" colspan="2">
                    <span style="font-weight: bold;">@Html.CheckBox("ECchkemail", true, new { onkeypress = "return fnsetfocus(event,'btnSave')", autocomplete = "off" })
                        <label id="chk_email_Agree" for="chk_email_Agree">Email receipt to client</label>
                    </span>
                </td>
            </tr>
        </table>@*
        @Html.Raw(ViewBag.editChargedist)
        *@<table id="tblEcsubmit" border="0" cellpadding="0" cellspacing="0" width="98%">
            <tr style="height: 50px">
                <td align="right">
                    <input type="submit" value="save" class="button" name="btnsave" onclick="return ValidateChargeInfor();" />
                    <input type="button" name="btnCancel" class="Echgclose button" value="Cancel" />
                </td>
            </tr>
        </table>
    }
    <script type="text/javascript">
        $(document).ready(function () {
            if ($('.ChgEmail').val() != "") {
                document.getElementById("chk_email_Agree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;' + "at&nbsp;" + $('.ChgEmail').val();
            }
            else {
                document.getElementById("chk_email_Agree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;';
            }
            $('.ChgEmail').keyup(
                   function (event) {
                       if ($('.ChgEmail').val() != "") {
                           document.getElementById("chk_email_Agree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;' + "at&nbsp;" + $('.ChgEmail').val();
                       }
                       else {
                           document.getElementById("chk_email_Agree").innerHTML = "Email receipt to  " + '@Model.custname&nbsp;';
                       }
                   }
            );
        });
               function isValidDate(strDate) {
                   var dateStr = strDate; var datePat = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{4})$/; var month, day, year; var monthArray = new Array(); var matchArray = dateStr.match(datePat); var intShowI; var args; var strError = ""; monthArray[0] = "January"; monthArray[1] = "February"; monthArray[2] = "March"; monthArray[3] = "April"; monthArray[4] = "May"; monthArray[5] = "June"; monthArray[6] = "July"; monthArray[7] = "August"; monthArray[8] = "September"; monthArray[9] = "October"; monthArray[10] = "November"; monthArray[11] = "December"; args = IsValidDate.arguments
                   if (dateStr != "") {
                       if (matchArray == null)
                       { strError = "Please enter date in mm/dd/yyyy format."; return strError; }
                       month = matchArray[1]; day = matchArray[3]; year = matchArray[4]; if (year <= 1753)
                       { strError = "Please enter a year greater than 1753."; return strError; }
                       if (month < 1 || month > 12)
                       { strError = "Month must be between 1 and 12."; return strError; }
                       if (day < 1 || day > 31)
                       { strError = "Day must be between 1 and 31."; return strError; }
                       if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) {
                           strError = monthArray[month - 1] + " doesn't have 31 days!"
                           return strError;
                       }
                       if (month == 2) {
                           var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)); if (day > 29 || (day == 29 && !isleap))
                           { strError = "February " + year + " doesn't have " + day + " days!"; return strError; }
                       }
                   }
                   return strError;
               }

               function ValidateChargeInfor() {
                   ClearInlineAlert('lblErrCDate1', 'tdEcDate1', '#FFFFFF');
                   ClearInlineAlert('lblErrCmail', 'tdcEmail', '#FFFFFF');
                   ClearInlineAlert('lblErrCamount1', 'tdECamount1', '#FFFFFF');
                   ClearInlineAlert('lblErrCNote1', 'tdECNote1', '#FFFFFF')
                   var stremail = trim($('.ChgEmail').val());
                   $('.ChgEmail').val(stremail);// = stremail;


                   if ($('.ChgEmail').val() != '') {
                       if (ValidateEmail($('.ChgEmail').val()) == 0) {
                           InlineAlert('lblErrCmail', 'tdcEmail', 'Please enter valid email.')
                           $('.ChgEmail').focus();
                           return false;
                       }
                       else {
                           ClearInlineAlert('lblErrCmail', 'tdcEmail', '#FFFFFF')
                       }
                   }

                   if ($('.TransChgDate').val() == "") {
                       //                Glb_ShowAlert("Invalid charge info!!! charge date can not be empty.");
                       InlineAlert('lblErrCDate1', 'tdEcDate1', "Invalid transaction info!!! transaction date can not be empty.")
                       $('.TransChgDate').focus();
                       return false;
                   }
                   else {
                       ClearInlineAlert('lblErrCDate1', 'tdEcDate1', '#FFFFFF')
                       var strRetAlert = isValidDate($('.TransChgDate').val())
                       if (strRetAlert != "") {
                           //                    Glb_ShowAlert(strRetAlert);
                           InlineAlert('lblErrCDate1', 'tdEcDate1', strRetAlert)
                           $('.TransChgDate').focus();
                           return false;
                       }
                       else {
                           ClearInlineAlert('lblErrCDate1', 'tdEcDate1', '#FFFFFF')
                       }
                       var dtCur = new Date();
                       var dtGiven = new Date($('.TransChgDate').val());
                       if (dtCur < dtGiven) {
                           //                    Glb_ShowAlert("Invalid charge info!!! charge date exceeding the current date.");
                           InlineAlert('lblErrCDate1', 'tdEcDate1', "Invalid transaction info!!! transaction date exceeding the current date.")
                           $('.TransChgDate').focus();
                           return false;
                       }
                       else {
                           ClearInlineAlert('lblErrCDate1', 'tdEcDate1', '#FFFFFF')
                       }
                   }
                   if ($('.EChgAmt').val() == "") {

                       InlineAlert('lblErrCamount1', 'tdECamount1', "Invalid transaction info!!! transaction amount can not be empty.")
                       $('.EChgAmt').focus();
                       return false;
                   }
                   else {
                       ClearInlineAlert('lblErrCamount1', 'tdECamount1', '#FFFFFF')
                   }

                   if ($('.EChgAmt').val() != '') {
                       if (parseFloat($('.EChgAmt').val()) == '0') {

                           InlineAlert('lblErrCamount1', 'tdECamount1', "Invalid transaction info!!! transaction amount can not be zero.")
                           $('.EChgAmt').focus();
                           return false;
                       }
                       else {
                           ClearInlineAlert('lblErrCamount1', 'tdECamount1', '#FFFFFF')
                       }
                   }
                   if ($('.EChgAmt').val() == ".") {

                       InlineAlert('lblErrCamount1', 'tdECamount1', "Invalid transaction Amount.")
                       $('.EChgAmt').focus();
                       return false;
                   }
                   else {
                       ClearInlineAlert('lblErrCamount1', 'tdECamount1', '#FFFFFF')
                   }
                   if ($('.EChgAmt').val() == "0") {

                       InlineAlert('lblErrCamount1', 'tdECamount1', "Invalid transaction info!!! transaction amount can not be zero.")
                       $('.EChgAmt').focus();
                       return false;
                   }
                   else {
                       ClearInlineAlert('lblErrCamount1', 'tdECamount1', '#FFFFFF')
                   }
                   
                   if ($('.EChgAmt').val().length > 0) {
                       var amount = $('.EChgAmt').val();
                       var len = $('.EChgAmt').val().length;
                       for (var i = 0; i < len; i++) {

                           var k = amount.charAt(i);
                           var digits = "0123456789.";
                           if ((digits.indexOf(k, 0)) == -1) {

                               InlineAlert('lblErrCamount1', 'tdECamount1', "Please enter valid amount")
                               $('.EChgAmt').val() = '';
                               $('.EChgAmt').focus();
                               return false;
                           }
                           else {
                               ClearInlineAlert('lblErrCamount1', 'tdECamount1', '#FFFFFF')
                           }
                       }
                   }
                  
                   if ($('.EcNotes').val() != "") {
                       if ($('.EcNotes').val().length > 1000) {

                           InlineAlert('lblErrCNote1', 'tdECNote1', "Invalid transaction info!!! transaction notes is exceeding the limit of 1000 characters.")
                           $('.EcNotes').focus();
                           return false;
                       }
                       else {
                           ClearInlineAlert('lblErrCNote1', 'tdECNote1', '#FFFFFF')
                       }
                   }
                   var objradNotAgree = document.getElementById('ECchkemail');
                       if (objradNotAgree.checked == true) {
                           //alert('1');
                           if ($('.ChgEmail').val() == "") {
                               ClearInlineAlert('lblErrCmail', 'tdcEmail', '#FFFFFF')
                               InlineAlert('lblErrCmail', 'tdcEmail', 'Please enter email.')
                               return false;
                           }
                           else {
                               ClearInlineAlert('lblErrCmail', 'tdcEmail', '#FFFFFF')
                           }
                       }
                       document.getElementById('tblEcsubmit').style.display = "none";
                   
               }

    </script>
    <script type="text/javascript">
        $(function () {
            var chgPat = "@Model.custname ";
            $("#lblPatientName").html(chgPat);
            @*   var chgt = "@ViewBag.tCharge";
            $("#lblchargtype").html(chgt);*@
           @* var chgEname = "@ViewBag.lblEChargeTo";
            if (chgEname != null && chgEname != "") {
                document.getElementById("trEChgTo").style.display = "";
                $("#lblEChargeTo").html(chgEname);
            } 
            else {
                document.getElementById("trEChgTo").style.display = "none";
            }*@
            //$(".TransChgDate").datepicker({
            //    dateFormat: 'mm/dd/yy',
            //    changeMonth: true,
            //    changeYear: true,
            //    //                showCurrentAtPos: 1,
            //    showWeeks: true,
            //    inline: true,
            //    numberOfMonths: [1, 1],
            //    yearRange: "1950:2020",
            //    showOn: "button",
            //    buttonImage: "../Images/calender.gif",
            //    buttonImageOnly: true

            //});
            $(".TransChgDate").val("@Model.Transaction_Date");
            $('.EChgAmt').val("@Model.Transaction_Amount");
        });
    </script>
</body>
@*<script type="text/javascript">
    function isValidDate(strDate) {
        var dateStr = strDate; var datePat = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{4})$/; var month, day, year; var monthArray = new Array(); var matchArray = dateStr.match(datePat); var intShowI; var args; var strError = ""; monthArray[0] = "January"; monthArray[1] = "February"; monthArray[2] = "March"; monthArray[3] = "April"; monthArray[4] = "May"; monthArray[5] = "June"; monthArray[6] = "July"; monthArray[7] = "August"; monthArray[8] = "September"; monthArray[9] = "October"; monthArray[10] = "November"; monthArray[11] = "December"; args = IsValidDate.arguments
        if (dateStr != "") {
            if (matchArray == null)
            { strError = "Please enter date in mm/dd/yyyy format."; return strError; }
            month = matchArray[1]; day = matchArray[3]; year = matchArray[4]; if (year <= 1753)
            { strError = "Please enter a year greater than 1753."; return strError; }
            if (month < 1 || month > 12)
            { strError = "Month must be between 1 and 12."; return strError; }
            if (day < 1 || day > 31)
            { strError = "Day must be between 1 and 31."; return strError; }
            if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) {
                strError = monthArray[month - 1] + " doesn't have 31 days!"
                return strError;
            }
            if (month == 2) {
                var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)); if (day > 29 || (day == 29 && !isleap))
                { strError = "February " + year + " doesn't have " + day + " days!"; return strError; }
            }
        }
        return strError;
    }
    
</script>*@
<script type="text/javascript">

    function editCSuccess(data) {
        if (data != '' & data.Success == true) {
            var Email = data.Object.Customer_Email;
            var PatientID = data.Object.PatientID == "null" ? null : data.Object.PatientID;
            var page_ind = data.Object.page_ind;
            var NoOfRecords = data.Object.NoOfRecords;
            var Date_range = data.Object.Date_range;
            var PageNo = data.Object.PageNo;
            var FromDate = data.Object.FromDate == "null" ? null : data.Object.FromDate;
            var ToDate = data.Object.ToDate == "null" ? null : data.Object.ToDate;
            var clientphone = data.Object.clientphone;
            var type_id = data.Object.type_id == "null" ? null : data.Object.type_id;
            var currentDate = $('#TransactionChgDate').val();
            var records = @ViewBag.pageRowCount;
            if (FromDate != null) {
                if (PageNo > 1) {
                    if (records == 1) {
                        PageNo = PageNo - 1;
                    }
                    else if (FromDate <= currentDate || records > 1) {
                        PageNo = PageNo;
                    }
                    else {
                        PageNo = PageNo - 1;
                    }
                }
            }
            $('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
            if (type_id != null) {
                $('#divEditcharge').dialog('close');
                $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&Customer_Email=' + Email + '&type_id=' + type_id, function (data) { $('#dvLoading').dialog('close'); });
            }
            else if (PatientID != null) {
                var PatientLogin_ID = data.Object.PatientLogin_ID;
                $("#divEditcharge").dialog('close');
                $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&PatientID=' + PatientID + '&PatientLogin_ID=' + PatientLogin_ID + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&clientphone=' + clientphone + '&Customer_Email=' + Email, function (data) { $('#dvLoading').dialog('close'); });
            }
            else {
                $("#divEditcharge").dialog('close');
                $("#gridcontent1").load('@Url.Action("DisplayTransactions", "Billing")?NoOfRecords=' + NoOfRecords + '&Date_range=' + Date_range + '&PageNo=' + PageNo + '&FromDate=' + FromDate + '&ToDate=' + ToDate + '&Customer_Email=' + Email, function (data) { $('#dvLoading').dialog('close'); });
            }
        }
        //else if (data.ErrorMessage == 'expire') {
        //    window.location.href = "../Home/SessionExpire";
        //}
        else {
            if (data != "_Logon_") {
                InlineAlert('lblErrCmail', 'tdcEmail', data.ErrorMessage)
                $('.ChgEmail').focus();
                document.getElementById('tblEcsubmit').style.display = "";
                return false;
            }
        }
    }
</script>
</html>
