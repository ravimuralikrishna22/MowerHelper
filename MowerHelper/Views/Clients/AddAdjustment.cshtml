@{
    Layout = null;
   
    string Name = ViewBag.patname;
}
<!DOCTYPE html>
<html>
<head>
@*<meta name="viewport" content="width=device-width" />*@
       <title>Mower Helper-Find an Mower Helper</title>
<script src="~/Scripts/Expire.js" type="text/javascript"></script>
</head>
<body>
   @using (Ajax.BeginForm("AddAdjustment", "Clients", new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            OnSuccess = "newAdSuccess"

        }, new { @id = "newAdgForm" }))
{
    @Html.Hidden("patselect")
    @Html.Hidden("hdnAdjPid")
    @Html.Hidden("hdnAdjPlId")
    @Html.Hidden("frm")
    <input type="hidden" id="hdnregdate" name="hdnregdate" value="@ViewBag.RegOndate" />
    <table border="0" cellpadding="6" cellspacing="1" width="100%" class="border_style">            
            <tr class="white_color" id="trAdjPatName" style="display:">
            <td width="25%" align="right"><strong>Client name :&nbsp;</strong></td>
            <td> <span id="lblAdjPatname"></span></td>
            </tr>
            @* <tr class="white_color" id="trAdjChg" style="display:none">
                <td width="25%" align="right">
                <font color="red">*</font><strong>Credit to :&nbsp;</strong>
                </td>
                <td id="tdAdjChg">
                    <span id="lblChargeTo2"></span>
                    @Html.DropDownList("ddlAdjPat", null, "--Select Billable Party--", new { @class = "textfield", @style = "height:30px;width:220px" })&nbsp;&nbsp;<span id="lblErrAdjChg" style="color: Black; font-weight: bold;"></span>
                </td>
            </tr>*@
             <tr class="white_color">
                <td width="25%" align="right">
                <font color="red">*</font><strong>Transaction type :&nbsp;</strong>
                </td>
                <td>
                @Html.DropDownList("AdjTypesList", null, new { @class = "textfield", @style = "height:30px;width:270px" })
                </td>
            </tr>            
             <tr class="white_color">
                <td width="25%" align="right">
                <font color="red">*</font><strong>Date of adjustment :&nbsp;</strong>
                </td>
                <td id="tdEAdjDate">
                @Html.TextBox("txtAdjApptDate", DateTime.Now.ToString("MM/dd/yyyy"), new { @class = "textfield", @style = "width:90px" }) &nbsp;&nbsp;<span id="lblErrAdjdate" style="color: Black; font-weight: bold;"></span>
                </td>
            </tr>
             <tr class="white_color">
                <td width="25%" align="right">
                <font color="red">*</font><strong>Adjustment amount :&nbsp;</strong>
                </td>
                <td align="left" id="tdEAdjamount">
                @Html.TextBox("txtadjAmount", null, new { @class = "textfield", @maxLength = 10, @style = "width:90px", @onkeypress = "return checkValidNumeric(txtadjAmount,8,2,event)" }) &nbsp&nbsp;<span id="lblErrAdjamount" style="color: Black; font-weight: bold;"></span>
                </td>
            </tr>
             <tr class="white_color">
                <td width="25%" align="right">
                <strong>Notes :&nbsp;</strong>
                </td>
                <td align="left" id="tdEAdjnote">
                @Html.TextArea("txtNotes", null, 3, 3, new { @class = "textfield", @style = "width:350px;height:78px;" })&nbsp;&nbsp;<img src="~/Images/help2.png" id="Img3" onmouseover="ddrivetip('@ViewBag.adjNote',300)" onmouseout="hideddrivetip()" style="vertical-align:middle" /> &nbsp;&nbsp;(Maximum length 1000 characters)<br />
                <span id="lblErrAdjNote" style="color: Black; font-weight: bold;"></span>
                </td>
            </tr>
        </table>
     <table border="0" cellpadding="0" cellspacing="0" width="98%">
    <tr style="height:50px">
        <td align="right" >
        <input type="submit" value="Save" class="button" name="btnSave" onclick="return ValidateAdjustmentInfo();" />
        <input type="button" name="btnCancel" class="Adgclose button" value="Cancel" />
        </td>
    </tr>
    </table>    
}
</body>
<script type="text/javascript">
    function isValidDate(strDate) {
        var dateStr = strDate; var datePat = /^(\d{1,2})(\/|-)(\d{1,2})\2(\d{4})$/; var month, day, year; var monthArray = new Array(); var matchArray = dateStr.match(datePat); var intShowI; var args; var strError = ""; monthArray[0] = "January"; monthArray[1] = "February"; monthArray[2] = "March"; monthArray[3] = "April"; monthArray[4] = "May"; monthArray[5] = "June"; monthArray[6] = "July"; monthArray[7] = "August"; monthArray[8] = "September"; monthArray[9] = "October"; monthArray[10] = "November"; monthArray[11] = "December"; args = IsValidDate.arguments
        if (dateStr != "") {
            if (matchArray == null)
            { strError = "Please enter date in mm/dd/yyyy format."; return strError; }
            month = matchArray[1]; day = matchArray[3]; year = matchArray[4]; if (year <= 1753)
            { strError = "Please enter a year greater than 1753."; return strError; }
            if (month < 1 || month > 12)
            { strError = "Month must be between 1 and 12."; return strError; }
            if (day < 1 || day > 31)
            { strError = "Day must be between 1 and 31."; return strError; }
            if ((month == 4 || month == 6 || month == 9 || month == 11) && day == 31) {
                strError = monthArray[month - 1] + " doesn't have 31 days!"
                return strError;
            }
            if (month == 2) {
                var isleap = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)); if (day > 29 || (day == 29 && !isleap))
                { strError = "February " + year + " doesn't have " + day + " days!"; return strError; }
            }
        }
        return strError;
    }
    $(function () {
        $("#txtAdjApptDate").datepicker({
            showOn: "button",
            buttonImage: "../Images/calender.gif",
            buttonImageOnly: true
        });

        var name = "@Name";
        if (name != null && name != "") {
            document.getElementById("lblAdjPatname").innerHTML = name;
        }


    });
    function ValidateAdjustmentInfo() {
        ClearInlineAlert('lblErrAdjamount', 'tdEAdjamount', '#FFFFFF');
        ClearInlineAlert('lblErrAdjNote', 'tdEAdjnote', '#FFFFFF');

        if (document.getElementById('txtAdjApptDate').value == "") { InlineAlert('lblErrAdjdate', 'tdEAdjDate', 'Adjustment date can not be empty.'); document.getElementById('txtAdjApptDate').focus(); return false; }
        else {
            var strRetAlert = isValidDate(document.getElementById('txtAdjApptDate').value);
            if (strRetAlert != "") { InlineAlert('lblErrAdjdate', 'tdEAdjDate', strRetAlert); document.getElementById('txtAdjApptDate').focus(); return false; }
            else { ClearInlineAlert('lblErrAdjdate', 'tdEAdjDate', '#FFFFFF'); }
            if (document.getElementById('txtAdjApptDate').value.length > 0) {
                var date = document.getElementById('txtAdjApptDate').value; var len = document.getElementById('txtAdjApptDate').value.length; for (var i = 0; i < len; i++) {
                    var k = date.charAt(i); var digits = "0123456789/"; if ((digits.indexOf(k, 0)) == -1) {
                        InlineAlert('lblErrAdjdate', 'tdEAdjDate', 'Please enter valid date'); document.getElementById('txtAdjApptDate').value = ''; document.getElementById('txtAdjApptDate').focus(); return false;
                    }
                    else { ClearInlineAlert('lblErrAdjdate', 'tdEAdjDate', '#FFFFFF'); }
                }
            }
            var dtCur = new Date(); var dtGiven = new Date(document.getElementById('txtAdjApptDate').value); if (dtCur < dtGiven) {
                InlineAlert('lblErrAdjdate', 'tdEAdjDate', 'Adjustment date exceeding the current system date.'); document.getElementById('txtAdjApptDate').focus(); return false;
            }
            else { ClearInlineAlert('lblErrAdjdate', 'tdEAdjDate', '#FFFFFF'); }
        }
        if (document.getElementById('txtadjAmount').value == "") { InlineAlert('lblErrAdjamount', 'tdEAdjamount', 'Adjustment Amount can not be empty.'); document.getElementById('txtadjAmount').focus(); return false; }
        else { ClearInlineAlert('lblErrAdjamount', 'tdEAdjamount', '#FFFFFF'); }
        if (document.getElementById('txtadjAmount').value != '') {
            if (parseFloat(document.getElementById('txtadjAmount').value) == '0') { InlineAlert('lblErrAdjamount', 'tdEAdjamount', 'Please enter proper amount value'); document.getElementById('txtadjAmount').focus(); return false; }
            else { ClearInlineAlert('lblErrAdjamount', 'tdEAdjamount', '#FFFFFF'); }
            if (document.getElementById('txtadjAmount').value == '.') { InlineAlert('lblErrAdjamount', 'tdEAdjamount', 'Please enter valid amount'); document.getElementById('txtadjAmount').focus(); return false; }
            else { ClearInlineAlert('lblErrAdjamount', 'tdEAdjamount', '#FFFFFF'); }
        }
        if (document.getElementById('txtadjAmount').value.length > 0) {
            var amount = document.getElementById('txtadjAmount').value; var len = document.getElementById('txtadjAmount').value.length;
            for (var i = 0; i < len; i++) {
                var k = amount.charAt(i); var digits = "0123456789.";
                if ((digits.indexOf(k, 0)) == -1) { InlineAlert('lblErrAdjamount', 'tdEAdjamount', 'Please enter valid amount'); document.getElementById('txtadjAmount').value = ''; document.getElementById('txtadjAmount').focus(); return false; }
                else { ClearInlineAlert('lblErrAdjamount', 'tdEAdjamount', '#FFFFFF'); }
            }
        }
        if (document.getElementById('txtNotes').value != "") {
            if (document.getElementById('txtNotes').value.length > 1000) { InlineAlert('lblErrAdjNote', 'tdEAdjnote', 'Notes entered is exceeding the limit of 1000 characters.'); document.getElementById('txtNotes').focus(); return false; }
            else { ClearInlineAlert('lblErrAdjNote', 'tdEAdjnote', '#FFFFFF'); }
        } return true;
    }
    </script>
</html>
