@using Obout.Mvc;
@using Obout.Mvc.ComboBox;
@*@model MowerHelper.Models.Classes.StateCity*@
@model MowerHelper.Models.AddAppointmentModel
@{
    Layout = null;
}

<script src="~/Scripts/Expire.js" type="text/javascript"></script>
<script src="~/Scripts/DatepickerNew.js" type="text/javascript"></script>
<style type="text/css">
    .confirmDialog1
    {
        /*background: url("../images/bg-button-green.gif") repeat-x scroll left top #459300 !important;
            border: 1px solid #459300 !important;*/
        background: repeat-x scroll left top #FF0000 !important;
        border: 1px solid #FF0000 !important;
        border-radius: 4px;
        color: #FFFFFF !important;
        cursor: pointer;
        display: inline-block;
        font-family: Verdana,Arial,sans-serif;
        font-size: 11px !important;
        padding: 4px 7px !important;
    }
</style>
<script type="text/javascript">
    $('#DailyReccur').keypress(
       function (event) {
           if (checkNumeric(event) == false) { return false; }

       }
   );
    $('#WeeklyReccur').keypress(
       function (event) {
           if (checkNumeric(event) == false) { return false; }

       }
   );

</script>

@using (Ajax.BeginForm("EditAppointment", "Schedule", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "EditApptSuccess",
        OnComplete = "SessionExpireFail"

    }, new { @id = "EditapptForm" }))
{
    @Html.AntiForgeryToken()
@*@Html.Hidden("apptstatus")
        @Html.Hidden("hidPatientID")
        @Html.Hidden("hidPatientLoginID")
        @Html.Hidden("hidTreckingID");
        @Html.Hidden("ApptId")
        @Html.Hidden("hdnFacRef_ID")                        
        @Html.Hidden("weekenddate")
        @Html.Hidden("dayenddate")        
        @Html.Hidden("ApptType")*@       
    @Html.Hidden("strTime")
    @Html.Hidden("AppointmentStatus_ID")
    @Html.Hidden("ToReference_ID")
    @Html.Hidden("ToReferenceLogin_ID")
    @Html.Hidden("AppointmentTracking_ID")
    @Html.Hidden("AppointmentID")
    @Html.Hidden("FacilityReference_ID")
    @Html.Hidden("EndDate")
    @Html.Hidden("dayEndDate")
    @Html.Hidden("weekEndDate")
    @Html.Hidden("ApptType")
    @Html.Hidden("interdayvalue")
    @Html.Hidden("interweekvalue")
    <input type="hidden" id="cellphone" name="cellphone" value="@Model.cellphone" />
    @Html.Hidden("Wselection")
    @Html.Hidden("chkweek")
@*@Html.Hidden("AppointmentRec")
         @Html.Hidden("interdayvalue")
    @Html.Hidden("EditFuInd")
    @Html.Hidden("interweekvalue")*@
    @Html.Hidden("AppointmentRecurrence_ID")
    @Html.Hidden("Editfutreapnt_Ind")
    @Html.Hidden("IntervalValue")
    @Html.Hidden("cancelappt")
    @Html.Hidden("Startdate")
    @Html.Hidden("VoiceFileName")
@*@Html.Hidden("cphone")*@         
    <input id="hdnselectEother" type="hidden" name="hdnselectEother" value="My Location" />
    <input id="hdnEplaceind" type="hidden" name="hdnEplaceind" value="@ViewBag.hdnEplaceind" />  
    <input type="hidden" id="Hdnapt_date" name="Hdnapt_date" value="@Model.AppointmentDate" />@*
        <input type="hidden" id="hdntechids" name="hdntechids" value="@ViewBag.technician_ids" />
         <input type="hidden" id="hdntecid1" name="hdntecid1" value="@ViewBag.tecid1" />
         <input id="hdntechpos" type="hidden" name="hdntechpos" value="@ViewBag.techpositions"/> 
        *@<table class="border_style" id="tblEditAppt" runat="server" cellspacing="1" cellpadding="8"
            width="100%" align="center" border="0">
            <tr class="white_color" height="20" id="trprovidername" runat="server" style="display: none">
                <td align="right" width="25%" style="font-size: 13px;">
                    <strong>Provider name :&nbsp;</strong>
                </td>
                <td width="75%" style="font-size: 13px;">
                    @Model.ProviderName
                </td>
            </tr>
            <tr class="nav_blue_color" id="trPatientName" height="20" runat="server">
                <td align="right" width="25%" style="font-size: 13px;">&nbsp;<strong>Client :&nbsp;</strong>
                </td>
                <td width="75%" style="font-size: 13px;">
                    @Model.PatientName
                </td>
            </tr>

            @* <tr class="nav_blue_color" id="trPtnotes1" visible="false" runat="server" height="20">
                <td align="right" width="25%" style="font-size: 13px;">
                    <strong>Client added notes :&nbsp;</strong>
                </td>
                <td style="font-size: 13px;">
                    @ViewBag.Patnote
                </td>
            </tr>*@
            <tr class="nav_blue_color" height="20" id="traptype">
                <td align="right" width="25%" style="font-size: 13px;">
                    <strong>Appointment type :&nbsp;</strong>
                </td>
                <td width="75%" style="font-size: 13px;">
                    @Model.ApptType
                </td>
            </tr>
            <tr id="trEPlaceofAppointment" class="nav_blue_color" height="20">
                <td width="25%" style="font-size: 13px; text-align: right">
                    <strong>Court location :&nbsp;</strong>
                </td>
                <td>
                    @*            @Html.RadioButton("rdoEApptPlace", "PatientEname", false)<span id="lblEPatPlace">@ViewBag.patname's place</span>
         &nbsp;&nbsp; @Html.RadioButton("rdoEApptPlace", "ProvideErname", true)@Session["FullName"]'s office*@
                    <table width="100%">
                        <tr>
                            <td width="35%" align="left">
                                @Html.DropDownList("EOtherAddressItemList", new List<SelectListItem> { new SelectListItem { Text = "New Location", Value = "0" } }, new { @class = "textfield", @style = "width:200px;" })
                            </td>
                            <td id="tdEditcourtlocation" align="left" style="display: none">
                                @Html.TextBox("CourtLocationName", "", new { @class = "textfield", autocomplete = "off", style = "width:200px", placeholder = "Court location name",MaxLength="100" })

                            </td>
                            <td>
                                <span id="tdEditcourtlocation1" width="60%" align="left" style="display: none">
                                    <strong>Name :&nbsp;</strong><span id="lblEditcourtlocation"></span>
                                </span>
                                @*<input type="checkbox"  name="defaultCoachAddress1" id="defaultCoachAddress1"  title="Default coach location" />*@
                                @Html.CheckBox("ChkDefaultCourt", false, new { onkeypress = "return fnsetfocus(event,'btnSave')", autocomplete = "off", title = "Default coach location" })
                                <strong>Default court location</strong>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="trEotherdeatails" class="nav_blue_color" height="20" style="display: none">
                <td width="25%" style="font-size: 13px; text-align: right">
                    <strong>Address :&nbsp;</strong>
                </td>
                <td>
                    <table cellpadding="4" cellspacing="0" border="0" width="100%">
                        <tr>
                            <td style="width: 18%"><strong>Address1 :&nbsp;</strong></td>
                            <td style="width: 35%; text-align: left"><span id="lblEoAddress1"></span></td>
                            <td style="width: 8%"><strong>Zip :&nbsp;</strong></td>
                            <td style="width: 35%; text-align: left"><span id="lblEocityzip"></span></td>
                        </tr>
                        <tr>
                            <td style="width: 13%"><strong>State :&nbsp;</strong></td>
                            <td style="width: 37%; text-align: left"><span id="lblEostate"></span></td>
                            <td style="width: 13%"><strong>City :&nbsp;</strong></td>
                            <td style="width: 37%; text-align: left"><span id="lblEocity"></span></td>
                        </tr>
                    </table>

                </td>
            </tr>
            <tr id="trEotherAddress" class="nav_blue_color" height="40" style="display: none">
                <td width="25%" style="font-size: 13px; text-align: right"><strong>Address :&nbsp;</strong></td>
                <td width="75%" runat="server" style="font-size: 13px;">
                    <table cellpadding="4" cellspacing="0" border="0" width="100%">
                        @Html.Partial("_EOtherCitiesStates", Model.ProvAddrInfo, new ViewDataDictionary { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "ProvAddrInfo" } })
                    </table>
                </td>
            </tr>
            <tr class="white_color" height="20" id="trduration1">
                <td align="right" width="25%" style="font-size: 13px;">&nbsp;<font color="red">*</font><strong>Date/Time/Duration :&nbsp;</strong>
                </td>
                <td width="75%" id="tdEDate" runat="server" style="font-size: 13px;">
                    <table cellpadding="0" cellspacing="0" border="0" width="100%">
                        <tr>
                            <td width="20%">
                                @Html.TextBox("txtEApptDate", DateTime.Now.ToString("MM/dd/yyyy"), new { @class = "textfield Datefield", @style = "width:90px" })
                            </td>
                            <td width="25%">
                                @Html.Obout(new ComboBox("cboEtime") { MenuWidth = 300, SelectedIndex = ViewBag.index, CssSettings = new ComboBoxCssSettings() { ItemsContainer = "ob_iCboIC multcolumn" }, SelectionMode = ComboBoxSelectionMode.Single })
                            </td>
                            <td width="7%">
                                @Html.DropDownList("ddlETimeMer",  new List<SelectListItem>

                                                              {
                                                               new SelectListItem{ Text="AM", Value = "0", Selected =true },
                                                               new SelectListItem{ Text="PM", Value = "1" }
                                                              }, new { @class = "textfield", @style = "width:55px;" })
                            </td>
                            <td>
                                @Html.DropDownList("ddlEDuration", new List<SelectListItem>

                                                              {
                                                               new SelectListItem{ Text="30", Value = "30", Selected =true },
                                                               new SelectListItem{ Text="60", Value = "60" },
                                                               new SelectListItem{ Text="90", Value = "90" },
                                                               new SelectListItem{ Text="120", Value = "120" }
                                                              }, new { @class = "textfield", @style = "width:55px;" })&nbsp;<strong>(Minutes)</strong>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr id="trnotes" class="nav_blue_color" runat="server" height="20">
                <td align="right" width="25%" style="font-size: 13px;">
                    <strong>&nbsp;&nbsp;&nbsp;Notes :&nbsp;</strong>
                </td>
                <td width="75%" id="tdENotes" runat="server" style="font-size: 13px;">

                    @Html.TextArea("Notes", Model.Notes, 3, 3, new { @class = "textfield", wrap = "virtual", @style = "width:350px;height:78px;" })&nbsp;&nbsp;(Maximum length 1000 characters)                                      
                </td>
            </tr>
            @if (ViewBag.ShowRecurrence == "Y")
            {
                <tr height="20" id="trrecurring1" runat="server" class="white_color">
                    <td align="right" width="20%" style="font-size: 13px;">
                        <strong>Recurring :&nbsp;</strong>
                    </td>
                    <td width="80%">
                        @Model.RepeatType
                        <input id="EchkRecurrence" type="checkbox" name="EchkRecurrence" style="margin-right: 5px" /><span id="Elblchgrec" runat="server" class="bluemenu" style="font-weight: bold; font-size: 13px; display: none">Change recurrence</span>
                    </td>
                </tr>
                <tr id="EtrRecurType" style="display: none;" class="white_color">
                    <td width="25%" style="font-size: 13px; text-align: right">
                        <strong>Recurring :&nbsp;</strong>
                    </td>
                    <td>&nbsp;@Html.RadioButton("ERecurring", "Daily", false)Daily
         &nbsp;@Html.RadioButton("ERecurring", "Weekly", false)Weekly         
                    </td>
                </tr>
                <tr class="nav_blue_color" id="Etrrecurr" runat="server" style="display: none;">
                    <td></td>
                    <td>
                        <table class="border_style" id="ERecurDaily" style="display: none; width: 100%; height: 45px"
                            cellspacing="1" cellpadding="1" border="0">
                            <tr class="nav_blue_color" height="20">
                                <td id="tdEDay" runat="server" align="left" style="font-size: 13px;">
                                    <font color="red"><b>*</b></font>Every : &nbsp;
                                        @Html.TextBox("DailyReccur", null, new { @class = "textfield", @style = "width:30px", MaxLength = "3" })&nbsp;
                                       Day(s)
                                </td>
                            </tr>
                            <tr class="white_color" height="20">
                                <td id="tdEendDay" runat="server" style="font-size: 13px;">
                                    <font color="red"><b>*</b></font>Ends On : &nbsp;
                                        @Html.TextBox("EtxtEndDateforDaily", "mm/dd/yyyy", new { @class = "textfield Datefield", @style = "width:90px" })

                                </td>
                            </tr>
                        </table>
                        <table class="border_style" id="ERecurWeekly" style="display: none; width: 100%; height: 45px"
                            cellspacing="1" cellpadding="1" border="0">
                            <tr class="nav_blue_color" height="20">
                                <td align="left" id="tdEWeek" runat="server" style="font-size: 13px;">
                                    <font color="red"><b>*</b></font>Every : &nbsp;
                                        @Html.TextBox("WeeklyReccur", null, new { @class = "textfield", @style = "width:30px", MaxLength = "3" })
                                    Week(s)
                                </td>
                            </tr>
                            <tr class="white_color" height="20">
                                <td align="left" id="tdEchkWeek1" style="font-size: 13px;">

                                    @foreach (var item in ViewBag.weeklylist)
                                    {
                                        var chkid = "chkweekselect" + @item.Key;
                                        <input id="@chkid" type="checkbox"  value="@item.Key" class="chkweekselect"  style="margin-right:5px"/>@item.Value 
                                    }
                                </td>
                            </tr>
                            <tr class="nav_blue_color" height="20">
                                <td align="left" id="tdEendWeek" runat="server" style="font-size: 13px;">
                                    <font color="red"><b>*</b></font>Ends On : &nbsp;
                                      
                                            @Html.TextBox("EtxtEndDateforWeek", "mm/dd/yyyy", new { @class = "textfield Datefield", @style = "width:90px" })

                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>   
            }
        </table>
    <br />
    <table border="0" cellpadding="0" cellspacing="0" width="98%">
        <tr style="text-align: right; height: 50px">
            <td>
                @*@Html.ActionLink("Delete this appointment", "ApptDelete", "Schedule", new { apptDelid = ViewBag.apptid, apptdate = ViewBag.aptdate, ToRefId = ViewBag.hidPatientID, enddate = ViewBag.enddate, recId = ViewBag.AppointmentRecurrence_ID, fromPage = ViewBag.fromPage }, new { @class = "confirmDialog1" })*@
                @Html.ActionLink("Delete this appointment", "ApptDelete", "Schedule", new { apptDelid = Model.AppointmentID, apptdate = Model.AppointmentDate, ToRefId = Model.ToReference_ID, enddate = Model.EndDate, recId = Model.AppointmentRecurrence_ID, fromPage = Model.FromPage }, new { @class = "confirmDialog1" })
                @* <input type="button" name="btndelete" value="Delete this appointment" id="btncancel" class="confirmDialog1" />*@
                <input class="button" type="submit" name="Save" value="Save" onclick="return Editcheckpage();" />&nbsp;
                  <input type="button" class="EditApptclose button" name="Cancel" value="Cancel" />

            </td>
        </tr>
    </table>
    <div id="dialog-confirm1" title="Mower Helper" style="display: none;">
    </div>
}
<script type="text/javascript">
    $.ajaxSetup({ cache: false });
    $('#dialog-confirm1').dialog({
        autoOpen: false,
        height: 170,
        resizable: false,
        width: 350,
        show: { effect: 'drop', direction: "up" },
        modal: true,
        buttons: {
            "Yes": function () {
                $("#delapptForm").submit();
            },
            "No": function () {
                $(this).dialog("close");
            }
        }

    });

    $(".confirmDialog1").click(function () {
        linkObj = $(this);
        var dialogDiv = $('#dialog-confirm1');
        var viewUrl = linkObj.attr('href');
        $.get(viewUrl, function (data) {
            dialogDiv.html(data);
            dialogDiv.dialog('open');
        });
        return false;
    });

    function delSuccess(data) {
        if (data.Success == true) {
            // var apptdates = data.Object.getPagedate;
            var frompage = data.Object.fromPage;
            var AptDate = data.Object.apptdate;

            if (frompage == "Week") {
                window.location = '../Schedule/WeeklyAppts?weekstart=' + AptDate;
            }
            else if (frompage == "month") {
                window.location = '../Schedule/ViewProvMonthlySchedule?nextMonth=' + AptDate;
            }
            else {
                window.location = '../Schedule/Schedulespecs?apptdate=' + AptDate + "&timeinterval=07:00-07:00" + "&redirectind=1";
            }

            $('#dialog-confirm1').dialog('close');
        }
            //else if (data.ErrorMessage == 'expire') {
            //    window.location.href = '../Home/SessionExpire';
            //}
        else {
            if (data != "_Logon_") {
                $('#dialog-confirm1').dialog('close');
                var obj = confirm(data.ErrorMessage);
                if (obj == true) {
                    document.getElementById("futureInd").value = "Y";
                    $("#delapptForm").submit();
                }
                else {
                    $('#dialog-confirm1').dialog('close');
                    if (confirm('Do you want to Delete this Appointment?')) {
                        document.getElementById("futureInd").value = "C";
                        $("#delapptForm").submit();
                    }
                    else {
                        $('#dialog-confirm1').dialog('close');
                    }
                }
            }
        }
    }

</script>
<script type="text/javascript">

    $(function () {
        var ShowRecurrence = "@ViewBag.ShowRecurrence";
        if (ShowRecurrence == "Y") {
            var recmsg = "@Model.RepeatType";
            var chkweek = "@ViewBag.chkweek";
            $("#Wselection").val(chkweek);
            if (recmsg == "No Repeat") {

                document.getElementById('EchkRecurrence').style.display = 'none';
                document.getElementById("Elblchgrec").style.display = 'none';
            }
            else {
                document.getElementById('EchkRecurrence').style.display = '';
                document.getElementById("Elblchgrec").style.display = '';
            }

            $("#EchkRecurrence").change(function () {
                if ($(this).is(":checked")) {
                    var weedayShow = "@Model.WeekDay";
                    if (weedayShow == "DayShow") {
                        document.getElementById("EtrRecurType").style.display = '';
                        document.getElementById("Etrrecurr").style.display = '';
                        document.getElementById("ERecurDaily").style.display = '';
                        $('input:radio[name="ERecurring"]').filter('[value="Daily"]').attr('checked', 'checked');
                        var dayEndDate = "@Model.dayEndDate";
                        var dayIntervalue = "@Model.interdayvalue";
                        $("#EtxtEndDateforDaily").val(dayEndDate);
                        $("#DailyReccur").val(dayIntervalue);
                        document.getElementById("ERecurWeekly").style.display = 'none';
                    }
                    else {
                        document.getElementById("EtrRecurType").style.display = '';
                        document.getElementById("Etrrecurr").style.display = '';
                        document.getElementById("ERecurDaily").style.display = 'none';
                        var dayEndDate = "@Model.weekEndDate";
                        var dayIntervalue = "@Model.interweekvalue";
                        document.getElementById("ERecurWeekly").style.display = '';
                        $("#WeeklyReccur").val(dayIntervalue);
                        $("#EtxtEndDateforWeek").val(dayEndDate);
                        $('input:radio[name="ERecurring"]').filter('[value="Weekly"]').attr('checked', 'checked');
                        var strchk = "@ViewBag.chkweek";
                        $("#Wselection").val(strchk);
                        // alert(strchk);
                        var obj1 = new Array();
                        obj1 = strchk.split(",");
                        var i;
                        for (i = 0; i <= obj1.length - 1; i++) {
                            var obj2 = document.getElementById("chkweekselect" + obj1[i]);
                            if (obj2 != null) {
                                document.getElementById("chkweekselect" + obj1[i]).checked = true;
                            }
                        }
                    }
                    $(':radio[name=ERecurring]').change(function () {
                        if ($(this).val() == 'Daily') {
                            document.getElementById("EtrRecurType").style.display = '';
                            document.getElementById("Etrrecurr").style.display = '';
                            document.getElementById("ERecurDaily").style.display = '';
                            $('input:radio[name="ERecurring"]').filter('[value="Daily"]').attr('checked', 'checked');
                            var dayEndDate = "@Model.dayEndDate";
                            var dayIntervalue = "@Model.interdayvalue";
                            $("#EtxtEndDateforDaily").val(dayEndDate);
                            $("#DailyReccur").val(dayIntervalue);
                            document.getElementById("ERecurWeekly").style.display = 'none';
                        }
                        else if ($(this).val() == 'Weekly') {
                            document.getElementById("EtrRecurType").style.display = '';
                            document.getElementById("Etrrecurr").style.display = '';
                            document.getElementById("ERecurDaily").style.display = 'none';
                            var dayEndDate = "@Model.weekEndDate";
                            var dayIntervalue = "@Model.interweekvalue";
                            document.getElementById("ERecurWeekly").style.display = '';
                            $("#WeeklyReccur").val(dayIntervalue);
                            $("#EtxtEndDateforWeek").val(dayEndDate);
                            $('input:radio[name="ERecurring"]').filter('[value="Weekly"]').attr('checked', 'checked');

                            var strchk = "@ViewBag.chkweek";
                            $("#Wselection").val(strchk);
                            var obj1 = new Array();
                            obj1 = strchk.split(",");
                            var i;
                            for (i = 0; i <= obj1.length - 1; i++) {
                                var obj2 = document.getElementById("chkweekselect" + obj1[i]);
                                if (obj2 != null) {
                                    document.getElementById("chkweekselect" + obj1[i]).checked = true;
                                }
                            }
                        }
                    });
            }
            else {
                document.getElementById("EtrRecurType").style.display = 'none';
                document.getElementById("Etrrecurr").style.display = 'none';
                document.getElementById("ERecurDaily").style.display = 'none';
                document.getElementById("ERecurWeekly").style.display = 'none';
            }
            });
    }
    });

$(document).ready(function () {

    @*  alert('@ViewBag.SelectedAddress'); alert('@ViewBag.SelectedAddressD');
        alert('@ViewBag.changedAddress1');*@
    @*    if ($("#EOtherAddressItemList option:selected").text() == '@ViewBag.SelectedAddress')    ViewBag.SelectedAddressD
        { alert("hello"); }*@
    @*if ('@ViewBag.changedAddress1' == '@ViewBag.SelectedAddressD') {
            $('#ChkDefaultCourt').attr('checked', true);
        }*@
       
    if ('@ViewBag.SelectedAddress' == "Y") {
          //  alert('HI');
            // $("#defaultCoachAddress1").attr("checked") ? alert("Checked") : alert("Unchecked"); 
            $('#ChkDefaultCourt').attr('checked', true);
            $("#OtherAddressItemList option:contains(" + "New Location" + ")").attr('selected', 'selected');
        }
        else {
            $('#ChkDefaultCourt').attr('checked', false);
        }
    // $("#combobox5").val("@ViewBag.technician_ids");
       @* $("#apptstatus").val("@ViewBag.appstatus");
        $("#hidPatientID").val("@ViewBag.hidPatientID");
        $("#hidPatientLoginID").val("@ViewBag.hidPatientLoginID");
        $("#ApptId").val("@ViewBag.apptid");
        $("#hdnFacRef_ID").val("@ViewBag.facRefId");
        $("#hidTreckingID").val("@ViewBag.hidTreckingID");*@

    var apptdate = "@Model.AppointmentDate";
       @* var patnote = "@ViewBag.Patnote";
        if (patnote == "") {
            document.getElementById('trPtnotes1').style.display = "none";
        }*@
    if (apptdate != "") {
        $("#txtEApptDate").val(apptdate);
    }
       @* $("#ddlEhr2").val("@ViewBag.gethour");
        $("#ddlEmin2").val("@ViewBag.getmin");*@
    $("#ddlETimeMer").val("@ViewBag.getAMPM");
    $("#ddlEDuration").val("@Model.Duration");
        
        @*$("#ddEAuto").val("@ViewBag.ddEAuto");*@
   // var selectEplace = "@Model.Aptplaceofservice";
    //if (document.getElementById('hdnEplaceind').value == "Y") {
        // document.getElementById("trEPlaceofAppointment").style.display = "";
        //if (selectEplace == "C") {
        //    $('input:radio[name=rdoEApptPlace][value=PatientEname]').attr('checked', 'checked');                
        //}
        //else if (selectEplace == "P") {
        //    $('input:radio[name=rdoEApptPlace][value=ProvideErname]').attr('checked', 'checked');
        //}
   // }
   // else {
        // document.getElementById("trEPlaceofAppointment").style.display = "none";
   // }
});
</script>
<script type="text/javascript">
    function Editcheckpage() {
        //var apptType1 = "@Model.ApptType";
        if (document.getElementById('trEotherAddress').style.display == "" || document.getElementById('trEotherAddress').style.display != "none") {
            document.getElementById('ProvAddrInfo_Address1').value = trim(document.getElementById('ProvAddrInfo_Address1').value);
            if (document.getElementById('ProvAddrInfo_Address1').value == '') {
                alert('Please enter Address1'); document.getElementById('ProvAddrInfo_Address1').focus(); return false;
            }
            if (document.getElementById('ProvAddrInfo_Zip').value == '') {
                alert('Please enter Zip code'); document.getElementById('ProvAddrInfo_Zip').focus(); return false;
            }
            if (document.getElementById('ProvAddrInfo_Zip').value != '') {
                if (document.getElementById('ProvAddrInfo_Zip').value.length != 5) {
                    alert('Invalid zip code');
                    document.getElementById('ProvAddrInfo_Zip').focus(); return false;
                }
                if (fnStringFieldValidate(document.getElementById('ProvAddrInfo_Zip'), "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ") == 0) {
                    alert('Invalid zip code!!! zip code must be in alphanumeric only.');
                    document.getElementById('ProvAddrInfo_Zip').focus(); return false;
                }
            }
            if (document.getElementById('ProvAddrInfo_State_ID').selectedIndex == 0) {
                alert('Please select state');
                document.getElementById('ProvAddrInfo_State_ID').focus();
                return false;
            }
            if (document.getElementById('ProvAddrInfo_City_ID').selectedIndex == 0) {
                alert('Please select city');
                document.getElementById('ProvAddrInfo_City_ID').focus();
                return false;
            }
        }
        if (document.getElementById('txtEApptDate').value == 0 || document.getElementById('txtEApptDate').value == '' || document.getElementById('txtEApptDate').value == 'mm/dd/yyyy') {
            alert('Please enter the appointment date.');
            document.getElementById('txtEApptDate').focus();
            return false;
        }
        if (document.getElementById('txtEApptDate').value != '' && document.getElementById('txtEApptDate').value != 'mm/dd/yyyy') {
            var Dateid = document.getElementById('txtEApptDate').value;
            var Dat = Dateid.split("/");
            var myDat = new Date(Dat[2], Dat[0] - 1, Dat[1]);
            var yearid = Dat[2];
            var Monthid = Dat[0];
            var MyId = Dat[1];
            var CurDt = new Date();
            var DatePat = /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/;
            var matchArray = Dateid.match(DatePat);
            if (matchArray == null) {
                alert('The date format!!! should be like mm/dd/yyyy');
                document.getElementById('txtEApptDate').focus();
                return false;
            }
            if (yearid < 1900 || yearid > 2060) {
                alert('Please enter a valid 4 digit year between 1900 and 2060');
                document.getElementById('txtEApptDate').focus();
                return false;
            }
            if (Monthid > 12 || Monthid == 0) {
                alert('Please enter a valid month');
                document.getElementById('txtEApptDate').focus();
                return false;
            }
            if (MyId > 31 || MyId == 0) {
                alert('Please enter a valid day');
                document.getElementById('txtEApptDate').focus();
                return false;
            }
            if (Monthid == 2 && MyId == 29 && (yearid % 4 != 0 || yearid % 100 == 0 && yearid % 400 != 0)) {
                alert('Please enter a valid day');
                document.getElementById('txtEApptDate').focus();
                return false;
            }
            if (((Monthid == 4 || Monthid == 6 || Monthid == 9 || Monthid == 11) && MyId == 31) || (Monthid == 2 && (MyId == 30 || MyId == 31))) {
                alert('Please enter a valid day');
                document.getElementById('txtEApptDate').focus();
                return false;
            }
        }
        var EnteredDate;
        EnteredDate = document.getElementById('txtEApptDate').value;
        EnteredDate = new Date(EnteredDate);
        //if ((document.getElementById('ddlEhr2').value == '') || (document.getElementById('ddlEhr2').value == "00")) {
        //    alert('Please choose the appointment time.');
        //    document.getElementById('ddlEhr2').focus();
        //    return (false);
        //}
        if (document.getElementById('ddlEDuration').value == '') {
            alert('Please choose the appointment duration.');
            document.getElementById('ddlEDuration').focus();
            return (false);
        }
        if (document.getElementById('Notes').value.length > 1000) {
            alert('Please enter at most 1000 characters in the notes field');
            document.getElementById('Notes').focus();
            return false;
        }
        if (document.getElementById("ERecurDaily").style.display == "") {
            //                alert("i1");
            document.getElementById('DailyReccur').value = trim(document.getElementById('DailyReccur').value);
            if (document.getElementById('DailyReccur').value == '' || document.getElementById('DailyReccur').value == 0) {
                //                    alert("i2");
                alert("Please enter the days of recurring.");
                document.getElementById('DailyReccur').focus();
                return false;
            }
            if (document.getElementById('EtxtEndDateforDaily').value == '' || document.getElementById('EtxtEndDateforDaily').value == 'mm/dd/yyyy') {
                //                    alert("i3");
                alert("Please enter the end date.");
                document.getElementById('EtxtEndDateforDaily').focus();
                return false;
            }
            if (document.getElementById('EtxtEndDateforDaily').value != '' && document.getElementById('EtxtEndDateforDaily').value != 'mm/dd/yyyy') {
                //                    alert("i4");
                var Dateid = document.getElementById('EtxtEndDateforDaily').value; var Dat = Dateid.split("/");
                var myDat = new Date(Dat[2], Dat[0] - 1, Dat[1]); var yearid = Dat[2]; var Monthid = Dat[0]; var MyId = Dat[1];
                var CurDt = new Date(); var DatePat = /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/; var matchArray = Dateid.match(DatePat);
                if (matchArray == null) { alert('The date format!!! should be like mm/dd/yyyy'); document.getElementById('EtxtEndDateforDaily').focus(); return false; }

                if (yearid < 1900) { alert('Please enter a valid 4 digit year between 1900 and 2060'); document.getElementById('EtxtEndDateforDaily').focus(); return false; }

                if (Monthid > 12 || Monthid == 0) { alert('Please enter a valid month'); document.getElementById('EtxtEndDateforDaily').focus(); return false; }

                if (MyId > 31 || MyId == 0) { alert('Please enter a valid day'); document.getElementById('EtxtEndDateforDaily').focus(); return false; }

                if (Monthid == 2 && MyId == 29 && (yearid % 4 != 0 || yearid % 100 == 0 && yearid % 400 != 0)) { alert('Please enter a valid day'); document.getElementById('EtxtEndDateforDaily').focus(); return false; }

                if (((Monthid == 4 || Monthid == 6 || Monthid == 9 || Monthid == 11) && MyId == 31) || (Monthid == 2 && (MyId == 30 || MyId == 31))) { alert('Please enter a valid day'); document.getElementById('EtxtEndDateforDaily').focus(); return false; }

            }
            var EndingDate = new Date(document.getElementById('EtxtEndDateforDaily').value);
            if (EndingDate <= EnteredDate) {
                //                    alert("i5");
                alert('End date should be greater than the appointment date.'); document.getElementById('EtxtEndDateforDaily').focus(); return false;
            }

            var RecurDate = new Date(); var month = RecurDate.getMonth(); RecurDate.setMonth(month + 3);
            if (EndingDate > RecurDate) {
                //                    alert("i6");
                alert('Recurring period should not exceed 3 months'); document.getElementById('EtxtEndDateforDaily').focus(); return false;
            }

        }
        //            alert("8");
        if (document.getElementById("ERecurWeekly").style.display == "") {
            document.getElementById('WeeklyReccur').value = trim(document.getElementById('WeeklyReccur').value);
            if (document.getElementById('WeeklyReccur').value == '' || document.getElementById('WeeklyReccur').value == 0) {
                alert("Please enter the week(s) of recurring.");
                document.getElementById('WeeklyReccur').focus();
                return false;
            }
            var selectedValues = [];
            $("[id*=tdEchkWeek1] input:checked").each(function () {
                selectedValues.push($(this).val());
            });
            if (selectedValues.length > 0) {
                //                       alert("Checkbox selected value(s): " + selectedValues);
                $("#Wselection").val(selectedValues);
            } else {
                alert("Please select the recurred day");
                return false;
            }

            if (document.getElementById('EtxtEndDateforWeek').value == '' || document.getElementById('EtxtEndDateforWeek').value == 'mm/dd/yyyy') {
                alert('Please enter the end date.');
                //                       document.getElementById('EtxtEndDateforWeek').focus(); 
                return false;
            }
            if (document.getElementById('EtxtEndDateforWeek').value != '' && document.getElementById('EtxtEndDateforWeek').value != 'mm/dd/yyyy') {
                var Dateid = document.getElementById('EtxtEndDateforWeek').value;
                var Dat = Dateid.split("/"); var myDat = new Date(Dat[2], Dat[0] - 1, Dat[1]);
                var yearid = Dat[2]; var Monthid = Dat[0]; var MyId = Dat[1];
                var CurDt = new Date(); var DatePat = /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/; var matchArray = Dateid.match(DatePat);
                if (matchArray == null) { alert('The date format!!! should be like mm/dd/yyyy'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

                if (yearid < 1900) { alert('Please enter a valid 4 digit year between 1900 and 2060'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

                if (Monthid > 12 || Monthid == 0) { alert('Please enter a valid month'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

                if (MyId > 31 || MyId == 0) { alert('Please enter a valid day'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

                if (Monthid == 2 && MyId == 29 && (yearid % 4 != 0 || yearid % 100 == 0 && yearid % 400 != 0)) { alert('Please enter a valid day'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

                if (((Monthid == 4 || Monthid == 6 || Monthid == 9 || Monthid == 11) && MyId == 31) || (Monthid == 2 && (MyId == 30 || MyId == 31))) { alert('Please enter a valid day'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

            }
            var EndingDate = new Date(document.getElementById('EtxtEndDateforWeek').value);
            if (EndingDate <= EnteredDate) { alert('End date should be greater than the appointment date.'); document.getElementById('EtxtEndDateforWeek').focus(); return (false); }

            var CheckDate = new Date(EnteredDate); CheckDate.setDate(CheckDate.getDate() + 6);
            if (EndingDate < CheckDate) { alert('The difference between end and start date should atleast one week.'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

            var MaxWeekDate = new Date(EnteredDate); var month1 = MaxWeekDate.getMonth(); MaxWeekDate.setMonth(month1 + 3);
            if (EndingDate > MaxWeekDate) { alert('Recurring period should not exceed 3 months.'); document.getElementById('EtxtEndDateforWeek').focus(); return false; }

        }
        document.body.style.cursor = 'wait';
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
      
        var itemsel = "@Model.Aptplaceofservice";
        document.getElementById("tdEditcourtlocation").style.display = "none";
        document.getElementById("tdEditcourtlocation1").style.display = "none";
        $.ajax({
            url: "@Url.Action("FillCourtLocations", "Schedule")",
                 type: "get",
                 dataType: "json",
                 contentType: "application/json;charset=utf-8",
                 success: function (data) {
                     $("#EOtherAddressItemList").empty();
                     $.each(data, function (index, value) {
                         //alert(data[index].Value);
                         $('#EOtherAddressItemList').append($('<option> </option>').val(data[index].Value).html(data[index].Text));
                         $("#EOtherAddressItemList option[value='']").prop('disabled', true);
                     });
                     if (itemsel == "O") {
                         var spname = "@Model.Aptplaceofservicename";
                    var myArray1 = new Array();
                    var myArray1 = spname.split(',');
                    $('#EOtherAddressItemList option').filter(function () { return $.trim($(this).text()) == myArray1[0]; }).attr('selected', true);
                    $("#EOtherAddressItemList").val("@ViewBag.SelectedAddressid");
                    var recordtext = $("#EOtherAddressItemList option:selected").text();
                    //alert(recordtext);
                    document.getElementById('hdnselectEother').value = recordtext;
                    //$('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
                    $.getJSON("GetOtherAddressDetails", { AppAddressId: $("#EOtherAddressItemList option:selected").val(), custId: $("#ToReference_ID").val() },
                            function (data) {
                              //  $('#dvLoading').dialog('close');
                                $('#tblEditAppt tr[id="trEotherdeatails"]').show();
                                $('#tblEditAppt tr[id="trEotherAddress"]').hide();
                                document.getElementById("tdEditcourtlocation").style.display = "none";
                                $("#lblEoAddress1").html(data.Address1);//.replace(",", ""));
                                var cityEaray = new Array();
                                var cityEaray = data.cityzip.split('-');
                                $("#lblEocityzip").html(cityEaray[1]);
                                $("#lblEostate").html(data.State);
                                $("#lblEocity").html(cityEaray[0]);
                                if (data.CourtLocationName == '' || data.CourtLocationName == null) {
                                    document.getElementById("tdEditcourtlocation").style.display = "";
                                    document.getElementById("tdEditcourtlocation1").style.display = "none";
                                }
                                else if (data.CourtLocationName != '') {
                                    document.getElementById("tdEditcourtlocation").style.display = "none";
                                    $("#lblEditcourtlocation").html(data.CourtLocationName);
                                    document.getElementById("tdEditcourtlocation1").style.display = "";
                                }
                                else if (data.ErrorMessage == 'false') {
                                    alert('Session is expired. You will be redirected to session expired page');
                                    window.location = '@Url.Action("SessionExpire", "Home")';
                             }
                         });
             }
            }
             });

        
        var apptType = "@Model.ApptType";
        if (apptType == "Client") {
            $("#trEPlaceofAppointment").show();
        }
        else {
            $("#trPatientName").hide();
            $("#trEPlaceofAppointment").hide();
            $("#trEotherdeatails").hide();
            $("#trEotherAddress").hide();
        }
        var Roleid = '@Session["Roleid"]';
             if (Roleid != 8) {
                 $('#tblEditAppt tr[id="traptype"]').removeClass("nav_blue_color");
                 $('#tblEditAppt tr[id="traptype"]').addClass("white_color");
                 $('#tblEditAppt tr[id="trduration1"]').removeClass("white_color");
                 $('#tblEditAppt tr[id="trduration1"]').addClass("nav_blue_color");
                 $('#tblEditAppt tr[id="trnotes"]').removeClass("nav_blue_color");
                 $('#tblEditAppt tr[id="trnotes"]').addClass("white_color");
                 //  }
             }
             else {
                 $('#tblEditAppt tr[id="traptype"]').removeClass("nav_blue_color");
                 $('#tblEditAppt tr[id="traptype"]').addClass("white_color");
                 $('#tblEditAppt tr[id="trduration1"]').removeClass("white_color");
                 $('#tblEditAppt tr[id="trduration1"]').addClass("nav_blue_color");
                 $('#tblEditAppt tr[id="trnotes"]').removeClass("nav_blue_color");
                 $('#tblEditAppt tr[id="trnotes"]').addClass("white_color");
             }
             $("#EOtherAddressItemList").change(function () {
                 $("#EOtherAddressItemList option[value='']").prop('disabled', true);
                 var recordtext = $("#EOtherAddressItemList option:selected").text();
                 document.getElementById("tdEditcourtlocation").style.display = "none";
                 document.getElementById("tdEditcourtlocation1").style.display = "none";
                 $("#CourtLocationName").val("");
                 $("#lblEditcourtlocation").html("");
                 //alert(recordtext);
                 document.getElementById('hdnselectEother').value = recordtext;
                 if (recordtext == 'New Location') {
                     $('#tblEditAppt tr[id="trEotherdeatails"]').hide();
                     $('#tblEditAppt tr[id="trEotherAddress"]').show();
                     document.getElementById("tdEditcourtlocation").style.display = "";
                     // document.getElementById("tdEditcourtlocation1").style.display = "none";
                     $('#ChkDefaultCourt').attr('checked', false);
                     $("#tdEditcourtlocation1").hide();
                     //$("#txtEditcourtlocation").val("");
                 }
                 else {
                     $('#dvLoading').dialog({ modal: true, dialogClass: 'dvLoading', draggable: false, resizable: false });
                     $.getJSON("GetOtherAddressDetails", { AppAddressId: $("#EOtherAddressItemList option:selected").val(), custId: $("#ToReference_ID").val() },
                         function (data) {
                             $('#dvLoading').dialog('close');
                             $('#tblEditAppt tr[id="trEotherdeatails"]').show();
                             $('#tblEditAppt tr[id="trEotherAddress"]').hide();
                             $("#lblEoAddress1").html(data.Address1);//.replace(",", ""));
                             var cityEaray = new Array();
                             var cityEaray = data.cityzip.split('-');
                             $("#lblEocityzip").html(cityEaray[1]);
                             $("#lblEostate").html(data.State);
                             $("#lblEocity").html(cityEaray[0]);
                             //alert(data.CourtLocationName);
                             if (data.Default_addr == "Y") {
                                 $('#ChkDefaultCourt').attr('checked', true);
                             }
                             else {
                                 $('#ChkDefaultCourt').attr('checked', false);
                             }
                             if (data.CourtLocationName == '' || data.CourtLocationName == null) {
                                 document.getElementById("tdEditcourtlocation").style.display = "";
                                 document.getElementById("tdEditcourtlocation1").style.display = "none";
                             }
                             else if (data.CourtLocationName != '') {
                                 document.getElementById("tdEditcourtlocation").style.display = "none";
                                 $("#lblEditcourtlocation").html(data.CourtLocationName);
                                 document.getElementById("tdEditcourtlocation1").style.display = "";
                             }
                             else if (data.ErrorMessage == 'false') {
                                 alert('Session is expired. You will be redirected to session expired page');
                                 window.location = '@Url.Action("SessionExpire", "Home")';
                             }
                         });
             }
                 $("#ChkDefaultCourt").show(); $("#trEPlaceofAppointment").show();
             });

    });
</script>



